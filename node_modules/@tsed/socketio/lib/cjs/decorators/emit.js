"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Emit = void 0;
const SocketReturnsTypes_js_1 = require("../interfaces/SocketReturnsTypes.js");
const socketReturns_js_1 = require("./socketReturns.js");
/**
 * Emit the response to the client.
 *
 * With the `@Emit` decorator, the method will accept a return type (Promise or not).
 *
 * ### Example
 *
 * ```typescript
 * @SocketService("/nsp")
 * export class MyWS {
 *
 *   @Input("event")
 *   @Emit("returnEvent")
 *   async myMethod(@Args(0) data: any, @Nsp socket): Promise<any> {
 *      return Promise.resolve({data})
 *   }
 * }
 * ```
 *
 * @decorator
 * @param eventName
 */
function Emit(eventName) {
    return (0, socketReturns_js_1.SocketReturns)(eventName, SocketReturnsTypes_js_1.SocketReturnsTypes.EMIT);
}
exports.Emit = Emit;
//# sourceMappingURL=emit.js.map