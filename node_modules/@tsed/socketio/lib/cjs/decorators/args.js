"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Args = void 0;
const core_1 = require("@tsed/core");
const SocketFilters_js_1 = require("../interfaces/SocketFilters.js");
/**
 * Inject the list of arguments in the decorated parameter.
 *
 * `@Args` accept an index parameter to pick up directly the item in the arguments list.
 *
 * ### Example
 *
 * ```typescript
 * @SocketService("/nsp")
 * export class MyWS {
 *
 *   @Input("event")
 *   myMethod(@Args() arguments: any[]) {
 *
 *   }
 *
 *   @Input("event2")
 *   myMethod2(@Args(0) data: any) {
 *
 *   }
 * }
 * ```
 *
 * @decorator
 * @param mapIndex
 * @param useType
 */
function Args(mapIndex, useType) {
    return (target, propertyKey, index) => {
        const store = core_1.Store.from(target);
        const type = core_1.Metadata.getParamTypes(target, propertyKey)[index];
        const param = {
            filter: SocketFilters_js_1.SocketFilters.ARGS,
            useMapper: false
        };
        if (mapIndex !== undefined) {
            Object.assign(param, {
                mapIndex,
                useMapper: true,
                type: useType || type,
                collectionType: (0, core_1.isCollection)(type) ? type : undefined
            });
        }
        store.merge("socketIO", {
            handlers: {
                [propertyKey]: {
                    parameters: {
                        [index]: param
                    }
                }
            }
        });
    };
}
exports.Args = Args;
//# sourceMappingURL=args.js.map