"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SocketProviderMetadata = void 0;
class SocketProviderMetadata {
    constructor(options = {}) {
        this.error = false;
        this.injectNamespaces = [];
        this.useBefore = [];
        this.useAfter = [];
        this.handlers = {};
        options.type && (this.type = options.type);
        options.namespace && (this.namespace = options.namespace);
        options.error && (this.error = options.error);
        options.injectNamespaces && (this.injectNamespaces = options.injectNamespaces);
        options.useBefore && (this.useBefore = options.useBefore);
        options.useAfter && (this.useAfter = options.useAfter);
        options.handlers && (this.handlers = options.handlers);
    }
    get useHandler() {
        return this.get("use");
    }
    get $onConnection() {
        return this.get("$onConnection");
    }
    get $onDisconnect() {
        return this.get("$onDisconnect");
    }
    get(key) {
        return this.handlers[key];
    }
    set(key, metadata) {
        this.handlers[key] = metadata;
    }
    getHandlers() {
        return Object.entries(this.handlers)
            .filter(([key]) => ["$onConnection", "$onDisconnect"].indexOf(key) === -1)
            .map(([, handler]) => handler);
    }
    createHook(hook, eventName) {
        this.set(hook, {
            ...(this.get(hook) || {}),
            eventName,
            methodClassName: hook
        });
    }
}
exports.SocketProviderMetadata = SocketProviderMetadata;
//# sourceMappingURL=SocketProviderMetadata.js.map