/**
 * Represents session data associated with a socket connection, providing a compatibility layer with Ts.ED v7 by wrapping a `socket.data` which is used to archive recoverability and resiliency to a `Map` instance.
 *
 * This class implements the `Map<string, unknown>` interface and provides methods and properties to manage and manipulate session data.
 *
 * @internal This class is designed for internal use.
 */
export declare class SocketSessionData extends Map<string, unknown> {
    #private;
    get size(): number;
    static get [Symbol.species](): MapConstructor;
    constructor(data: Record<string, unknown>);
    [Symbol.iterator](): IterableIterator<[string, unknown]>;
    clear(): void;
    delete(key: string): boolean;
    entries(): IterableIterator<[string, unknown]>;
    forEach(callbackfn: (value: unknown, key: string, map: Map<string, unknown>) => void, thisArg?: any): void;
    get(key: string): unknown | undefined;
    has(key: string): boolean;
    keys(): IterableIterator<string>;
    set(key: string, value: unknown): this;
    values(): IterableIterator<unknown>;
}
