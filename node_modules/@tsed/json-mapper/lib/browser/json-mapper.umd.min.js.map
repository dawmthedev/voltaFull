{"version":3,"file":"json-mapper.umd.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,cAAeA,QAAQ,iBAC/B,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,aAAc,gBAAiBJ,GACb,iBAAZC,QACdA,QAAQ,qBAAuBD,EAAQG,QAAQ,cAAeA,QAAQ,iBAEtEJ,EAAK,qBAAuBC,EAAQD,EAAK,cAAeA,EAAK,gBAC9D,CATD,CASGO,MAAM,CAACC,iCAAkCC,mC,8WCRrC,MAAMC,mBACTC,cAKIC,KAAKC,MAAQ,IAAIC,IAKjBF,KAAKG,QAAU,CAAC,EAKhBH,KAAKI,QAAU,CAAC,EAKhBJ,KAAKK,aAAe,CAAC,EAKrBL,KAAKM,QAAU,CACXC,aAAY,qDACZC,QAAO,gDACPC,SAAQ,iDACRC,QAAO,gDACPC,OAAM,+CACNC,cAAa,sDACbC,iBAAgB,yDAChBC,MAAK,8CACLC,OAAM,+CACNC,WAAU,mDACVC,eAAc,wDAElBjB,KAAKkB,UAAU,cAAelB,KAAKmB,YAAYC,KAAKpB,OACpDA,KAAKkB,UAAU,aAAclB,KAAKqB,WAAWD,KAAKpB,OAClDA,KAAKkB,UAAU,aAAclB,KAAKsB,WAAWF,KAAKpB,OAClDA,KAAKkB,UAAU,gBAAiBlB,KAAKuB,IAAIH,KAAKpB,MAClD,CACAwB,cAAcC,EAAOC,GACjB,MAAMC,GAAK,0CAAAhB,QAAOc,GAMlB,OALAzB,KAAKC,MAAM2B,IAAIH,GAAO,IAAIvB,KAAM0B,IAAI,aAAc,CAC9CD,KACAD,QAEJ1B,KAAKG,QAAQwB,GAAMD,EACZ1B,IACX,CACA6B,iBAAiBJ,GACb,MAAMK,EAAQ9B,KAAKC,MAAM8B,IAAIN,GAC7B,GAAIK,EAAO,CACP,MAAM,GAAEH,GAAOG,EAAMC,IAAI,qBAClB/B,KAAKG,QAAQwB,GACpB3B,KAAKC,MAAM+B,OAAOP,EACtB,CACJ,CACAP,UAAUe,EAAKC,GAEX,OADAlC,KAAKM,QAAQ2B,GAAOC,EACblC,IACX,CACAmC,KAAKC,QAAQ,GAAI,SAAU,QACvBpC,KAAKkB,UAAU,QAASlB,KAAKC,OAC7B,MAAM,QAAS,SAAcD,KACvBqC,cAAgBC,OAAOC,KAAKjC,SAC7BiB,KAAKiB,GACC,SAASA,eAAkBA,OAEjCC,KAAK,MACVN,KAAK,GAAGE,+DAE4BV,YAAYS,aAChD,MAAMN,MAAQ9B,KAAKC,MAAM8B,IAAIN,OAAOM,IAAIW,UAExC,OADA1C,KAAKG,QAAQwB,IAAMG,MAAMJ,GAClBI,KACX,CACAa,cAAcC,GACV,MAAM,MAAE3C,GAAUD,KAClB,MAAO,IACA4C,EACH3C,QAER,CACA4C,QAAQpB,EAAOqB,EAAQC,EAAO,CAAC,GAC3B,MAAMC,GAAQ,0CAAAC,UAASxB,GAASA,EAAQzB,KAAKkD,QAAQzB,GAC/CiB,EAAW1C,KAAKmD,YAAYL,GAClC,IAAIM,EAAcpD,KAAKC,MAAM8B,IAAIiB,IAAUhD,KAAKC,MAAM8B,KAAI,0CAAApB,QAAOqC,IAKjE,GAJKI,IACDA,EAAc,IAAIlD,IAClBF,KAAKC,MAAM2B,IAAIoB,EAAOI,IAEtBA,EAAYC,IAAI,cAChB,OAAOD,EAAYrB,IAAI,cAG3B,IAAKqB,EAAYC,IAAIX,GAAW,CAC5B,MAAMf,EAAK3B,KAAKsD,MAAMN,EAAON,GAE7BU,EAAYxB,IAAIc,EAAU,CACtBf,OAEJ,MAAMS,EAASW,EAAKX,OAASW,EAAKX,OAAOT,EAAImB,GAAU9C,KAAKuD,aAAaP,EAAOrB,EAAImB,GACpF,IACI,OAAO9C,KAAKmC,KAAKC,EAAQ,CAAET,KAAIF,MAAOuB,EAAON,YAIjD,CAFA,MAAOc,GACH,MAAM,IAAIC,MAAM,+BAA8B,0CAAA9C,QAAOc,4BAAgC+B,EAAIE,aAAatB,IAC1G,CACJ,CACA,OAAOgB,EAAYrB,IAAIW,EAC3B,CACApB,WAAWK,EAAIO,EAAOU,GAClB,OAAI,0CAAAe,YAAWzB,GACJA,EAAM0B,WAEV5D,KAAKG,QAAQwB,IAAM,0CAAAhB,SAAO,0CAAAD,SAAQwB,KAASA,EAAOU,EAC7D,CACAM,QAAQzB,GACJ,IAAKA,EACD,OAAOa,OAEX,IAAI,0CAAA9B,SAAQiB,MAAW,0CAAAlB,cAAakB,GAAQ,CACxC,MAAMoC,EAAO,CAACC,MAAO5D,IAAK6D,KAAKC,MAAMC,IAAM,0CAAAC,aAAYzC,GAAO0C,SAASF,KACvE,GAAIJ,EACA,OAAOA,CAEf,CACA,OAAOpC,CACX,CACAN,YAAYQ,EAAIiB,GACZ,IAAIwB,EAASpE,KAAKI,QAAQuB,IAAK0C,QAAQC,MAAM,UAAU,EAAO,CAAC1B,IAC/D,GAAIwB,EACA,OAAOA,CAEf,CACAG,YAAYC,EAAQ1B,GAChB,OAAe,IAAXA,GACO0B,EAAOH,OAAOC,MAAM,UAAU,EAAO,CAACxB,GAGrD,CACAK,YAAYL,GACR,OAAe,IAAXA,EACO,UAEW,IAAlBA,EAAO2B,OACA,IAEJ3B,EAAOL,KAAK,IACvB,CACAa,MAAM7B,EAAOiB,GACT,MAAO,IAAG,0CAAAO,UAASxB,GAASA,GAAQ,0CAAAd,QAAOc,OAAU,0CAAAiD,kBAAiBhC,GAC1E,CACAiC,YAAYhD,EAAIiD,GACZ,MAAO,GAAGjD,KAAMiD,GACpB,E,UChKJrF,EAAOD,QAAUM,gC,UCAjBL,EAAOD,QAAUO,gC,GCCbgF,yBAA2B,CAAC,EAGhC,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,yBAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa1F,QAGrB,IAAIC,EAASsF,yBAAyBE,GAAY,CAGjDzF,QAAS,CAAC,GAOX,OAHA4F,oBAAoBH,GAAUxF,EAAQA,EAAOD,QAASwF,qBAG/CvF,EAAOD,OACf,CCrBAwF,oBAAoBK,EAAK5F,IACxB,IAAI6F,EAAS7F,GAAUA,EAAO8F,WAC7B,IAAO9F,EAAiB,QACxB,IAAM,EAEP,OADAuF,oBAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdN,oBAAoBQ,EAAI,CAAChG,EAASkG,KACjC,IAAI,IAAIvD,KAAOuD,EACXV,oBAAoBW,EAAED,EAAYvD,KAAS6C,oBAAoBW,EAAEnG,EAAS2C,IAC5EK,OAAOoD,eAAepG,EAAS2C,EAAK,CAAE0D,YAAY,EAAM5D,IAAKyD,EAAWvD,IAE1E,ECND6C,oBAAoBW,EAAI,CAACG,EAAKC,IAAUvD,OAAOwD,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,oBAAoBmB,EAAK3G,IACH,oBAAX4G,QAA0BA,OAAOC,aAC1C7D,OAAOoD,eAAepG,EAAS4G,OAAOC,YAAa,CAAEjE,MAAO,WAE7DI,OAAOoD,eAAepG,EAAS,aAAc,CAAE4C,OAAO,GAAO,E,uCCiDvD,SAASkE,EAAWC,EAAYC,EAAQrE,EAAKsE,GAClD,IAA2HjB,EAAvHkB,EAAIC,UAAUhC,OAAQwB,EAAIO,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjE,OAAOoE,yBAAyBJ,EAAQrE,GAAOsE,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBX,EAAIU,QAAQC,SAASP,EAAYC,EAAQrE,EAAKsE,QACpH,IAAK,IAAIM,EAAIR,EAAW5B,OAAS,EAAGoC,GAAK,EAAGA,KAASvB,EAAIe,EAAWQ,MAAIZ,GAAKO,EAAI,EAAIlB,EAAEW,GAAKO,EAAI,EAAIlB,EAAEgB,EAAQrE,EAAKgE,GAAKX,EAAEgB,EAAQrE,KAASgE,GAChJ,OAAOO,EAAI,GAAKP,GAAK3D,OAAOoD,eAAeY,EAAQrE,EAAKgE,GAAIA,CAC9D,C,glBA6F6B3D,OAAOwE,OA0GXxE,OAAOwE,OAyDkB,mBAApBC,iBAAiCA,gB,+BCvT/D,MAAMC,EAA2B,IAAI9G,IAI9B,SAAS+G,EAAuBpD,EAAMb,GACzCgE,EAAyBpF,IAAIiC,EAAM,IAAIb,EAC3C,CAIO,SAASkE,IACZ,OAAOF,CACX,CCVO,SAASG,KAAcC,GAC1B,OAAQd,IACJc,EAAMC,SAASxD,IACXoD,EAAuBpD,EAAMyC,EAAO,GACtC,CAEV,CCJA,IAAIgB,EAAa,MACbC,YAAYC,GAIR,OAAI,IAAAC,WAAUD,IAAV,MAAmBA,EACZA,EAEJ,IAAIE,KAAKF,EACpB,CACAG,UAAUC,GACN,OAAOA,EAAS,IAAIF,KAAKE,GAAQC,cAAgBD,CACrD,GCjBJ,SAASE,EAAUN,GACf,MAAO,CAAC,KAAM,QAAQrD,SAASqD,EACnC,CDiBAF,EAAalB,EAAW,CACpBe,EAAWO,OACZJ,GClBI,MAAMS,UAAkBtE,MAC3B1D,YAAY2D,GACRsE,MAAM,eAAetE,KACrB1D,KAAKwC,KAAO,YAChB,EAOJ,IAAIyF,EAAkB,MAClBV,YAAYC,EAAMU,GACd,OAAOlI,MAAK,IAAAW,QAAOuH,EAAIrE,OAAS7D,MAAK,IAAAW,QAAOuH,EAAIrE,OAAO2D,EAAMU,QAAOjD,CACxE,CACA0C,UAAUC,EAAQM,GACd,OAAOlI,MAAK,IAAAW,QAAOuH,GAAKrE,QAA4B,iBAAX+D,EAAsB5H,MAAK,IAAAW,QAAOuH,EAAIrE,OAAO+D,EAAQM,GAAON,CACzG,CACAO,OAAOX,GACH,OAAgB,OAATA,EAAgB,KAAO,GAAKA,CACvC,CACAY,QAAQZ,GACJ,QAAI,CAAC,OAAQ,KAAK,GAAMrD,SAASqD,KAE7B,CAAC,QAAS,KAAK,GAAOrD,SAASqD,KAE/BM,EAAUN,GACH,UACEvC,IAATuC,IAEKA,OAFT,EAGJ,CACAa,OAAOb,GACH,GAAIM,EAAUN,GACV,OAAO,KACX,QAAavC,IAATuC,EACA,OAAOA,EACX,MAAMrC,GAAKqC,EACX,GAAIc,MAAMnD,GACN,MAAM,IAAI4C,EAAU,qCAExB,OAAO5C,CACX,CACAoD,OAAOf,GACH,OAAIM,EAAUN,GACH,KACJe,OAAOf,EAClB,GAEJS,EAAkB7B,EAAW,CACzBe,EAAWgB,OAAQE,OAAQD,QAASG,SACrCN,GCjDH,IAAIO,EAAe,MACfjB,YAAYC,GACR,OAAOtB,OAAOuC,IAAIjB,EACtB,CACAG,UAAUC,GACN,OAAOA,EAAOhE,WAAW8E,QAAQ,UAAW,IAAIA,QAAQ,IAAK,GACjE,GAEJF,EAAepC,EAAW,CACtBe,EAAWjB,SACZsC,G,+BCWI,SAASG,EAAiBC,GAC7B,OAAO,IAAAC,eAAcC,IACjBA,EAAWtE,OAAOH,OAAO0E,GAAG,mBAAoBH,EAAG,GAE3D,CCJO,SAASI,EAAkBJ,GAC9B,OAAO,IAAAC,eAAcC,IACjBA,EAAWtE,OAAOH,OAAO0E,GAAG,oBAAqBH,EAAG,GAE5D,CCdO,SAASK,EAAcL,GAC1B,OAAO,IAAAC,eAAcC,IACjBA,EAAWtE,OAAOH,OAAO0E,GAAG,gBAAiBH,EAAG,GAExD,CCJO,SAASM,EAAYN,GACxB,OAAO,IAAAC,eAAcC,IACjBA,EAAWtE,OAAOH,OAAO0E,GAAG,cAAeH,EAAG,GAEtD,CCvBO,SAASO,EAAsB3B,EAAMhD,EAAQ5B,GAChD,OAAO4B,GAAQH,QAAQC,MAAM,mBAAoBkD,EAAM,CAAC5E,GAC5D,CCFO,SAASwG,EAAuB5B,EAAMhD,EAAQ5B,GACjD,OAAO4B,GAAQH,QAAQC,MAAM,oBAAqBkD,EAAM,CAAC5E,GAC7D,CCFO,SAASyG,EAAmB7E,EAAQtC,EAAOU,GAC9C,OAAO4B,EAAOH,OAAOC,MAAM,gBAAiBpC,EAAO,CAACU,GACxD,C,+BCFO,MAAM0G,EAAqB,CAC9BC,4BAA4B,EAC5BC,sBAAsB,EACtBC,cAAc,GCHX,MAAMC,SACA1J,KAAK4H,OAAS,CACnB+B,OAAM,IAAIC,IACC,KAAKA,EAAKC,OAAOzB,SAAS3F,KAAK,UAE3C,CACH1C,YAAYX,GACRY,KAAK8J,KAAO,GACZ9J,KAAK+J,MAAQ3K,CACjB,CACA4K,cAAcC,GACV,OAAOA,EAAM1I,KAAK2I,GAAM,KAAKA,KACjC,CACAF,cAAcG,EAAUlI,EAAKW,GACzB,MAAO,eAAeuH,OAAclI,MAAQW,IAChD,CACAoH,kBAAkB/H,EAAKW,GACnB,MAAO,6BAA6BX,QAAUA,MAAQW,IAC1D,CACAoH,kBAAkBJ,GAEd,OADAA,EAAOA,EAAKC,OAAOzB,UACN3D,OAAqBiF,EAAO9B,OAAO+B,OAAO,gBAAiBC,GAAlD,SAC1B,CACAQ,OAAOH,GAGH,OAFAA,EAAQA,EAAMJ,QAAQQ,QAAkBpF,IAAToF,KACzB5F,QAAUzE,KAAK8J,KAAKQ,QAAQL,GAC3BjK,IACX,CACAuK,SAASX,GACL5J,KAAKoK,IAAI,IAAIR,WACb,MAAMY,EAASxK,KAAKyK,MAEpB,OADAzK,KAAKoK,IAAI,KACFI,CACX,CACAE,QACI,MAAMtG,EAASpE,KAAK8J,KAAKa,SAASN,GACvBA,aAAgBX,EAASW,EAAKK,QAAUL,IAEnD,OAAOrK,KAAK4K,QAAUxG,EAAO7C,KAAKsJ,GAAS,KAAOA,IAAQzG,CAC9D,CACA0G,WAAWnJ,EAAIM,KAAQW,GACnB,OAAO5C,KAAK4B,IAAIK,EAAKyH,EAAOtH,OAAOT,EAAIM,EAAKyH,EAAO9G,WAAWA,IAClE,CACAmI,iBAAiBpJ,EAAIM,KAAQW,GACzB,OAAO5C,KAAKgL,OAAOtB,EAAOtH,OAAOT,EAAIM,EAAKyH,EAAO9G,WAAWA,IAChE,CACAqI,MAAMzI,EAAM6H,GAER,OADArK,KAAKoK,IAAI,SAAS5H,OAAU6H,MACrBrK,IACX,CACAkL,KAAKC,EAAUvB,EAAO,IAClB,MAAMY,EAASxK,KAAKoK,IAAIe,EAAW,aAAevB,EAAKnH,KAAK,MAAQ,UAAUgI,MAE9E,OADAzK,KAAKoK,IAAI,OACFI,CACX,CACAY,GAAGC,GACC,MAAMb,EAAS,IAAIc,EAASD,EAAWrL,MAEvC,OADAA,KAAKoK,IAAII,GACFA,CACX,CACAe,OAAOC,GACH,MAAMC,EAAK,IAAIC,EAAaF,GAE5B,OADAxL,KAAKoK,IAAIqB,GACFA,CACX,CACAE,OAAOA,GAEH,OADA3L,KAAK4K,QAAUe,EACR3L,IACX,CACAyK,IAAIkB,GAAS,GACT,MAAMnB,EAAS,IAAId,EAAO1J,KAAKZ,QAG/B,OAFAoL,EAAOmB,OAAOA,GACd3L,KAAKoK,IAAII,GACFA,CACX,CACAQ,OAAOX,GAEH,OADArK,KAAKoK,IAAI,UAAUC,MACZrK,KAAKZ,MAChB,CACAA,OACI,OAAOY,KAAK+J,OAAS/J,IACzB,CACA4B,IAAIgK,EAAMC,GAEN,OADA7L,KAAKoK,IAAI,GAAGwB,OAAUC,MACf7L,IACX,CACA4D,WACI,OAAO5D,KAAK0K,QAAQjI,KAAK,KAC7B,EAEJ,MAAM6I,UAAiB5B,EACnB3J,YAAYsL,EAAWjM,GACnB4I,QACAhI,KAAKqL,UAAYA,EACjBrL,KAAK+J,MAAQ3K,CACjB,CACA0M,OACI,MAAMtB,EAAS,IAAId,EAAO1J,KAAK+J,OAE/B,OADA/J,KAAK+L,WAAavB,EACXA,CACX,CACAE,QACI,MAAO,CACH,OAAO1K,KAAKqL,kBACT3B,EAAOiC,OAAO3D,MAAM0C,SACvB,IACA1K,KAAK+L,WAAa,CAAC,YAAarC,EAAOiC,OAAO3L,KAAK+L,WAAWrB,SAAU,KAAO,IACjFsB,MACN,EAEJ,MAAMN,UAAqBhC,EACvB,GACA3J,YAAYyL,GACRxD,QACAhI,KAAKwL,MAAQA,EACbxL,MAAK,EAAO,IAAIE,GACpB,CACA+L,KAAKZ,GACD,MAAMb,EAAS,IAAId,EAEnB,OADA1J,MAAK,EAAK4B,IAAIyJ,EAAWb,GAClBA,CACX,CACAE,QACI,MAAO,CACH,WAAW1K,KAAKwL,cACb9B,EAAOiC,OAAO7H,MAAMoI,KAAKlM,MAAK,EAAKmM,WAAWxB,SAAQ,EAAEU,EAAWb,KAC3D,CAAe,YAAda,EAA0B,GAAGA,KAAe,QAAQA,QAAiB3B,EAAOiC,OAAOnB,EAAOE,aAEtG,KACFsB,MACN,ECnHJ,SAASI,EAAOC,GACZ,MAAO,KAAKA,GAChB,CAeO,MAAMC,UAAyBxM,EAAA,EAClCC,cACIiI,QAKAhI,KAAKK,aAAe,CAAC,EACrBL,KAAKkB,UAAU,gBAAiBlB,KAAKuM,cAAcnL,KAAKpB,OACxDA,KAAKkB,UAAU,yBAA0BlB,KAAKoJ,uBAAuBhI,KAAKpB,OAC1EA,KAAKkB,UAAU,wBAAyBlB,KAAKmJ,sBAAsB/H,KAAKpB,OACxEA,KAAKwB,cAAcc,OAAQtC,KAAKwM,UAAUpL,KAAKpB,OAC/CA,KAAKwB,cAAcsC,MAAO9D,KAAKyM,SAASrL,KAAKpB,OAC7CA,KAAKwB,cAActB,IAAKF,KAAK0M,OAAOtL,KAAKpB,OACzCA,KAAKwB,cAAcuC,IAAK/D,KAAK2M,OAAOvL,KAAKpB,OACzCA,KAAKwB,cAAc,YAAaU,GAAUiG,OAAOjG,IACrD,CACAX,IAAIiK,EAAO5I,EAAU,CAAC,GAElB,IA1CR,SAA0BgD,EAAKhD,GAC3B,QAAOA,EAAQgK,iBAAkB,IAAA9L,OAAM8E,SAAiBX,IAARW,IAGvC,IAAAiH,SAAQjK,EAAQiB,OAAUjB,EAAQiB,OAASvB,SAAWM,EAAQgK,eAC3E,CAqCaE,CAAiBtB,EADtB5I,EAAU5C,KAAK+M,WAAWnK,IAEtB,OAAO4I,GAEN5I,EAAQgK,iBAAkB,IAAAI,SAAQxB,KACnC5I,EAAQgK,eAAiB9I,OAE7B,MAAMrC,EAAQmB,EAAQiB,OAAQ,IAAAnD,SAAQ8K,GAChCpJ,EAASpC,KAAK6C,QAAQpB,EAAOmB,EAAQE,QAC3C,OAAIF,EAAQgK,eACiB5M,KAAK6C,QAAQD,EAAQgK,eAAgBhK,EAAQE,QAC9CpB,GAAG8J,EAAO,IAAK5I,EAASjB,GAAIS,EAAOT,KAExDS,EAAOV,GAAG8J,EAAOxL,KAAK2C,cAAcC,GAC/C,CACAC,QAAQpB,EAAOqB,GACX,GAAI,CAACmK,QAASC,SAAS/I,SAAS1C,GAC5B,MAAM,IAAIgC,MAAM,IAAG,IAAA9C,QAAOc,sCAE9B,OAAOuG,MAAMnF,QAAQpB,EAAOqB,EAChC,CACAX,KAAKC,GAAQ,GAAET,EAAE,SAAEe,EAAQ,MAAEjB,IAEzB,OADAzB,KAAKK,aAAasB,GAAMF,EACjBuG,MAAM7F,KAAKC,EAAQ,CAAET,KAAIe,WAAUjB,SAC9C,CACA8K,cAAc5K,EAAIiE,EAAKhD,GACnB,IACI,OAAO,IAAI5C,KAAKK,aAAasB,GAAIiB,EAAQ2G,2BAA6B,CAAC,EAAI3D,EAI/E,CAFA,MAAOuH,GACH,OAAOvH,CACX,CACJ,CACArC,aAAa9B,EAAOE,EAAImB,GACpB,MAAMsK,EAAS,EAAAC,gBAAA,KAAqB5L,GAC9B6L,EAAa,IAAIvJ,IACjBwJ,EAAmB,KAAI,IAAAC,qBAAoBJ,GAAQK,UACnDjD,GAAS,IAAId,GAASa,MAAM,QAAS,WAkC3C,OAjCAC,EAAOY,GAAG,gBAAgBJ,OAAO,SAC7BoC,EAAO5I,OAAOkJ,kBACdlD,EAAOJ,IAAIpK,KAAK2N,iBAAiBP,EAAQtK,IAGzCsK,EAAO5I,OAAOH,QAAQhB,IAAI,uBAC1BrD,KAAKI,QAAQuB,GAAMyL,EAAO5I,OAC1BgG,EAAO5I,IAAI,QAAS,2BAA2BD,wBAGnD6I,EAAOS,MAAM,WAAY,uBACrBmC,EAAO5I,OAAOoJ,eAAenJ,OAC7B+F,EAAO5I,IAAI,UAAW,uEAGtB4I,EAAO5I,IAAI,UAAW,6BAE1B4I,EAAOS,MAAM,MAAO,kBAAkBtJ,uBAEtC6I,EAAOJ,OAAOmD,EAAiB5C,SAASkD,IACpC,MAAM5L,EAAM4L,EAAcC,aAG1B,GADAR,EAAWlD,IAAIjC,OAAO0F,EAAcE,OAAOvJ,OAAOwJ,WAAW/L,IAAQA,MAChE4L,EAAcrJ,QAAQyJ,UAAW,IAAAxG,WAAUoG,EAAcrJ,QAAQyJ,UAClEJ,EAAcK,gBACbL,EAAcrJ,QAAQH,QAAQhB,IAAI,WAAarD,KAAKuE,YAAYsJ,EAAcrJ,OAAQ1B,IAG3F,OAAO9C,KAAKmO,YAAYN,EAAelM,EAAImB,EAAO,KAGtD0H,EAAOJ,IAAIpK,KAAKoO,wBAAwBhB,EAAQE,EAAYxK,IAExDsK,EAAO5I,OAAOH,QAAQhB,IAAI,qBAC1BrD,KAAKI,QAAQuB,GAAMyL,EAAO5I,OACnBgG,EAAOQ,OAAO,0BAA0BrJ,qBAAsBvC,OAAOwE,YAEzE4G,EAAOQ,OAAO,OAAO5L,OAAOwE,UACvC,CACAvC,WAAWgN,EAAUnM,EAAOU,GACxB,OAAOyG,EAAmBrJ,KAAKI,QAAQiO,GAAWnM,EAAOU,EAC7D,CACA+K,iBAAiBP,EAAQtK,GACrB,MAAM0H,EAAS,IAAId,EACb4E,EAAgBlB,EAAO5I,OAAO8J,gBAC9B7C,EAAKjB,EAAOe,OAAO,UAAU+C,EAAcR,kBAKjD,OAJAQ,EAAcb,OAAOpG,SAAQ,CAACnF,EAAOqM,KACjC,MAAMC,EAAexO,KAAK6C,QAAQX,EAAOY,GACzC2I,EAAGQ,KAAK,IAAIsC,MAASxD,iBAAiByD,EAAa7M,GAAI,QAAQ,IAE5D6I,CACX,CACA2D,YAAYN,EAAelM,EAAImB,GAC3B,MAAMb,EAAMkG,OAAO0F,EAAcjJ,aAC3B6J,EAAWtG,OAAO0F,EAAcE,OAAOvJ,OAAOwJ,WAAW/L,IAAQA,GACjEoM,EAAWrO,KAAK2E,YAAYhD,EAAIM,GAChCyM,EAASb,EAAcc,WAAW5M,IAAI,UACtC6M,EAAaF,GAAU,sBAAsBA,MACnD,IAAIlE,GAAS,IAAId,GAASU,IAAI,UAAUnI,KAAON,KAAMmB,GAAU,MAC/D,MAAM+L,EAAO5M,IAAQwM,EAAW,uBAAuBA,SAAgBxM,KAAS,IAAIA,KAEhF4L,EAAcrJ,QAAQH,QAAQhB,IAAI,YAClCrD,KAAKI,QAAQiO,GAAYR,EAAcrJ,OACvCgG,EAASA,EAAOY,GAAG,iBAAiBiD,mCAGxC,MAAMS,EAAkBjB,EAAcrJ,QAAQH,QAAQhB,IAAI,iBAC1D,IAAI+B,EAAS,SAASyJ,KAClBC,IACA9O,KAAKI,QAAQiO,GAAYR,EAAcrJ,OAEvCY,EAAS,eAAeiJ,aAAoBQ,OAD/BnF,EAAO9G,QAAQgM,OAGhC,MAAMG,EAAWvE,EAAO5I,IAAI,OAAOwK,EAAOnK,KAAQmD,GAAQgG,GAAG,GAAGgB,EAAOnK,oBAYvE,OAXajC,KAAKgP,kBAAkBnB,EAAelM,EAAImB,EAAQ8L,EAE3DK,CADAH,EACKC,EAAS3D,GAAG,GAAGgB,EAAOnK,gBAAkBA,KAGxC8M,GAETA,EAASnN,IAAI,OAAOK,IAAOmK,EAAOnK,IAC9Ba,GAAUA,EAAOqB,SAAS,YAC1B4K,EAASjD,OAAO1B,IAAI,cAAcnI,KAE/BuI,EAAOpL,MAClB,CACA4P,kBAAkBnB,EAAelM,EAAImB,EAAQ8L,GACzC,MAAM3M,EAAMkG,OAAO0F,EAAcjJ,aAC3ByJ,EAAWrO,KAAK2E,YAAYhD,EAAIM,GAChCiN,EAAWrB,EAAcc,WAAWQ,eAE1C,GADkBtB,EAAcc,WAAWS,YAAcF,GAAUzK,OACpD,CACX,MAAM4K,EAxJlB,SAAyBxB,GACrB,OAAOA,EAAcE,OAAOvJ,OAAOoJ,cAAc0B,QAAQzB,EAAcc,WAAWY,YACtF,CAsJ0BC,CAAgB3B,GACxB9K,EAAO2G,EAAO9G,QAAQgM,EAAY,kBAAkBS,MAC1D,OAAQ7E,GAAWA,EAAO5I,IAAIwK,EAAOnK,GAAM,iBAAiBmK,EAAOnK,OAASc,KAChF,CACA,MAAMc,EAAOgK,EAAcc,WAAWjB,iBAAmBG,EAAcc,WAAWL,gBAAgBmB,KAAO5B,EAAc6B,cACjHlB,EAAexO,KAAK6C,QAAQgB,EAAMf,GACxC,OAAI+K,EAActN,aACNiK,GAAWA,EAAOM,YAAW,IAAAnK,QAAOkN,EAAcjB,gBAAiBR,EAAOnK,GAAM,QAAQuM,EAAa7M,MAAOiN,GAEpHM,GAAUzK,QACVzE,KAAKI,QAAQiO,GAAYR,EAAcrJ,OAC/BgG,GAAWA,EAAOM,WAAW0D,EAAa7M,GAAIyK,EAAOnK,GAAM2M,EAAY,sBAAsBP,uBAEjG7D,GAAWA,EAAOM,WAAW0D,EAAa7M,GAAIyK,EAAOnK,GAAM2M,EACvE,CACA7B,YAAW,OAAEjK,EAAM,SAAE6M,GAAW,EAAI,MAAEvI,KAAUxE,IAC5C,GAAIA,EAAQd,iBAAiB,EAAA8N,mBACzB,OAAO5P,KAAK+M,WApLxB,SAA8BjL,EAAOc,GACjC,MAAO,IACAA,EACHd,WAAOmD,EACPpB,KAAM/B,EAAM4N,cACZ9C,eAAgB9K,EAAM8K,eACtB9J,OAAQhB,EAAM+N,UAAU/M,OAExBoM,SAAUpN,EAAMqN,eAExB,CA0KmCW,CAAqBlN,EAAQd,MAAOc,KAG/DwE,EAAQA,GAASF,KACXG,SAAQ,CAACjF,EAAQX,KACnB,IAAK,CAACqC,MAAOC,IAAK7D,KAAKiE,SAAS1C,GAAQ,CACpC,MAAMsO,GAAW,IAAApP,QAAOc,IACpB,IAAAd,QAAOc,KAAUW,EACjBpC,KAAKwB,cAAcC,EAAOW,EAAO2N,GAAU3O,KAAKgB,IAGhDpC,KAAKwB,cAAcC,GAAO,CAACS,EAAOU,IAAYR,EAAOmF,YAAYrF,EAAO,IACjEU,EACHiB,KAAMpC,KAGlB,KAEJ,MAAMgI,EAAe7G,EAAQ6G,cAAgBH,EAAmBG,aAChE,MAAO,IACA7G,EACH4G,qBAAsB5G,EAAQ4G,sBAAwBF,EAAmBE,qBACzED,2BAA4B3G,EAAQ2G,4BAA8BD,EAAmBC,2BACrFzG,YAAmBmC,IAAXnC,IAAwB2G,GAAe,GAAc3G,IAAU,EACvE6M,WACAK,cAvBkB,CAAC,EAwBnBd,SAAUtM,EAAQsM,UAAY,GAEtC,CACAd,wBAAwBhB,EAAQE,EAAYxK,GACxC,MAAM0G,EAAuB4D,EAAO5I,OAAOzC,IAAI,wBACzCkO,EAAU,IAAI3C,EAAWG,UAAUlM,KAAKU,GAAQ,IAAIA,OAAQQ,KAAK,MACjE+H,EAAS,IAAId,EACnBc,EAAOJ,IAAI,gCACX,IAAIc,EAAOV,EAAOU,KAAK,oBAAqB,CAAC,QAI7C,GAHI+E,EAAQxL,SACRyG,EAAOA,EAAKE,GAAG,KAAK6E,sBAEpB,IAAAzP,SAAQgJ,GAAuB,CAC/B,MAAMgF,EAAexO,KAAK6C,QAAQ2G,EAAqB0G,kBAAmBpN,GAE1E,OADAoI,EAAKtJ,IAAI,WAAY8H,EAAOtH,OAAOoM,EAAa7M,GAAI,aAAc,YAC3D6I,CACX,CACA,OAAIhB,GACA0B,EAAKtJ,IAAI,WAAY,cACd4I,IAGXU,EAAKE,GAAG,0DAA0DxJ,IAAI,WAAY,cAC3E4I,EACX,CACAgC,UAAUhB,EAAO5I,GACb,OAAO4I,CACX,CACAmB,OAAOnB,EAAO5I,GACV,IAAI,IAAA9B,OAAM0K,GACN,OAAOA,EAEX,MAAM5F,EAAM,IAAI7B,IAIhB,OAHA,IAAA/C,YAAWwK,GAAOnE,SAASpF,IACvB2D,EAAIwE,IAAIpK,KAAKmQ,QAAQ3E,EAAMvJ,GAAMW,GAAS,IAEvCgD,CACX,CACA6G,SAASjB,EAAO5I,GACZ,OAAI,IAAA9B,OAAM0K,GACCA,EAEJ,GAAG4E,OAAO5E,GAAOjK,KAAKsJ,GAClB7K,KAAKmQ,QAAQtF,EAAMjI,IAElC,CACA8J,OAAOlB,EAAO5I,GACV,IAAI,IAAA9B,OAAM0K,GACN,OAAOA,EAEX,MAAM5F,EAAM,IAAI1F,IAIhB,OAHA,IAAAc,YAAWwK,GAAOnE,SAASpF,IACvB2D,EAAIhE,IAAIK,EAAKjC,KAAKmQ,QAAQ3E,EAAMvJ,GAAMW,GAAS,IAE5CgD,CACX,CACAuK,QAAQ3E,GAAO,GAAE7J,KAAOiB,IACpB,OAAO5C,KAAKsB,WAAWK,EAAI6J,EAAO5I,EACtC,CACAwG,uBAAuBiF,EAAUnM,EAAOU,GACpC,OAAOwG,EAAuBlH,EAAOlC,KAAKI,QAAQiO,GAAWzL,EACjE,CACAuG,sBAAsBkF,EAAUnM,EAAOU,GACnC,OAAOuG,EAAsBjH,EAAOlC,KAAKI,QAAQiO,GAAWzL,EAChE,EChSG,SAASyN,EAAiB7L,EAAQtC,EAAOU,GAC5C,OAAO4B,EAAOH,OAAOC,MAAM,cAAepC,EAAO,CAACU,GACtD,CCDO,SAAS0N,EAAoB1K,GAChC,OAAOtD,OAAO6J,QAAQvG,GAAKiE,QAAO,EAAE,CAAE3H,OAAY,IAAAqO,YAAWrO,IACjE,CCeA,SAAS,EAAOmK,GACZ,MAAO,KAAKA,GAChB,CACO,MAAMmE,UAAuB1Q,EAAA,EAChCC,cACIiI,QACAhI,KAAKwB,cAAcc,OAAQtC,KAAKwM,UAAUpL,KAAKpB,OAC/CA,KAAKwB,cAAcsC,MAAO9D,KAAKyM,SAASrL,KAAKpB,OAC7CA,KAAKwB,cAActB,IAAKF,KAAK0M,OAAOtL,KAAKpB,OACzCA,KAAKwB,cAAcuC,IAAK/D,KAAK2M,OAAOvL,KAAKpB,OACzCA,KAAKkB,UAAU,UAAWlB,KAAKyQ,QAAQrP,KAAKpB,OAC5CA,KAAKwB,cAAc,YAAaU,GAAUiG,OAAOjG,IACrD,CACAX,IAAIiK,EAAO5I,EAAU,CAAC,GAClB,IAAI,IAAA9B,OAAM0K,GACN,OAAOA,EAGX,MAAM/J,EAzBd,SAAqBoC,EAAM+B,GACvB,MAAM8K,GAAW,IAAAhQ,SAAQkF,GACzB,OAAI8K,IAAa,IAAAC,eAAcD,KAAc,IAAAnQ,cAAaqF,GAGnD/B,GAAQvB,OAFJoO,CAGf,CAmBsBhB,EADd9M,EAAU5C,KAAK+M,WAAWnK,IACQiB,KAAM2H,GAExC,OADexL,KAAK6C,QAAQpB,EAAOmB,EAAQE,QAC7BpB,GAAG8J,EAAOxL,KAAK2C,cAAcC,GAC/C,CACAvB,WAAWgN,EAAUnM,EAAOU,GACxB,OAAOyN,EAAiBrQ,KAAKI,QAAQiO,GAAWnM,EAAOU,EAC3D,CACAW,aAAa9B,EAAOE,EAAImB,GACpB,MAAMsK,EAAS,EAAAC,gBAAA,KAAqB5L,GAC9B6L,EAAa,IAAIvJ,IACjBwJ,EAAmB,KAAI,IAAAC,qBAAoBJ,GAAQK,UACnDjD,GAAS,IAAId,GAASa,MAAM,QAAS,WAO3C,OANAC,EAAOY,GAAG,gBAAgBJ,OAAO,SAEjCR,EAAOS,MAAM,MAAO,MACpBT,EAAO5I,IAAI,UAAW,6BAEtB4I,EAAOJ,IAAIpK,KAAK4Q,gBAAgBjP,IAC3B4L,EAAiB9I,QAItB+F,EAAOJ,OAAOmD,EAAiB5C,SAASkD,IAEpC,GADAP,EAAWlD,IAAIyD,EAAcjJ,eACxBiJ,EAAcrJ,QAAQyJ,UAAW,IAAAxG,WAAUoG,EAAcrJ,QAAQyJ,UACjEJ,EAAcrJ,QAAQH,QAAQhB,IAAI,WAAarD,KAAKuE,YAAYsJ,EAAcrJ,OAAQ1B,IAG3F,OAAO9C,KAAKmO,YAAYN,EAAelM,EAAImB,EAAO,KAGtD0H,EAAOJ,IAAIpK,KAAK6Q,yBAAyBzD,IAEzC5C,EAAOJ,IAAIpK,KAAKoO,wBAAwBhB,EAAQE,IACzC9C,EAAOQ,OAAO,OAAO5L,OAAOwE,YAfxB4G,EAAOQ,OAAO,wCAAwC5L,OAAOwE,UAgB5E,CACAmJ,YAAW,OAAEjK,EAAM,SAAE6M,GAAW,EAAI,MAAEvI,KAAUxE,KAE5CwE,EAAQA,GAASF,KACXG,SAAQ,CAACjF,EAAQX,KACd,CAACqC,MAAOC,IAAK7D,KAAKiE,SAAS1C,IAC5BzB,KAAKwB,cAAcC,GAAO,CAACS,EAAOU,IAAYR,EAAOuF,UAAUzF,EAAO,IAC/DU,EACHiB,KAAMpC,KAEd,IAEJ,MAAMgI,EAAe7G,EAAQ6G,cAAgBH,EAAmBG,aAChE,MAAO,IACA7G,EACHE,YAAmBmC,IAAXnC,IAAwB2G,GAAe,GAAc3G,IAAU,EACvE6M,WACAK,cAfkB,CAAC,EAiB3B,CACA7B,YAAYN,EAAelM,EAAImB,GAC3B,MAAMb,EAAMkG,OAAO0F,EAAcjJ,aAC3B6J,EAAWtG,OAAO0F,EAAcE,OAAOvJ,OAAOwJ,WAAW/L,IAAQA,GACjEoM,EAAWrO,KAAK2E,YAAYhD,EAAIM,GAChCyM,EAASb,EAAcc,WAAW5M,IAAI,UACtC6M,EAAaF,GAAU,sBAAsBA,MACnD,IAAIlE,GAAS,IAAId,GAASU,IAAI,UAAUnI,KAAON,KAAMmB,GAAU,MAE3D+K,EAAcrJ,QAAQH,QAAQhB,IAAI,YAClCrD,KAAKI,QAAQiO,GAAYR,EAAcrJ,OACvCgG,EAASA,EAAOY,GAAG,iBAAiBiD,mCAGxC,MAAMyC,EAAgBjD,EAAcrJ,QAAQH,QAAQhB,IAAI,eACxD,IAAI+B,EAAS,SAASnD,IAClB6O,IACA9Q,KAAKI,QAAQiO,GAAYR,EAAcrJ,OAEvCY,EAAS,eAAeiJ,aAAoBpM,MAD/ByH,EAAO9G,QAAQgM,OAGhCpE,EAASA,EAAO5I,IAAI,OAAO,EAAOK,KAAQmD,GAAQgG,GAAG,GAAG,EAAOnJ,oBAc/D,OAbajC,KAAKgP,kBAAkBnB,EAAe5L,EAAKa,EAAQ8L,EAE5DK,CADA6B,EACKtG,EAAOY,GAAG,GAAG,EAAOnJ,gBAAkBA,KAGtCuI,GAELiE,IAAaxM,EACbuI,EAAO5I,IAAI,2BAA2B6M,SAAgBxM,MAAS,EAAOA,IAGtEuI,EAAO5I,IAAI,OAAOK,IAAO,EAAOA,IAE7BuI,EAAOpL,MAClB,CACA4P,kBAAkBnB,EAAe5L,EAAKa,EAAQ8L,GAC1C,MAAMQ,EAAYvB,EAAcc,WAAWS,UACrC1B,EAAmBG,EAAcc,WAAWjB,iBAClD,GAAIG,EAActN,aAAc,CAC5B,MAAMsD,EAAOgK,EAAc6B,cAC3B,IAAIlB,EACJ,GAAId,EAAkB,CAClB,MAAMqD,EAAalD,EAAcE,OAAOgD,WACxCvC,EAAexO,KAAK6C,QAAQ,iBAAiBkO,KAAc9O,IAAOa,EAAQ,CACtEV,OAAQ,IAAMpC,KAAKgR,0BAA0BnD,EAAe/K,IAEpE,MAEI0L,EAAeY,EAAY,CAAEzN,GAAI,IAAO3B,KAAK6C,QAAQgB,EAAMf,GAE/D,OAAQ0H,GAAWA,EAAOM,YAAW,IAAAnK,QAAOkN,EAAcjB,gBAAiB,EAAO3K,GAAM,QAAQuM,EAAa7M,MAAOiN,EACxH,CACA,GAAIQ,EACA,OAAQ5E,GAAWA,EAAO5I,IAAI,EAAOK,GAAM,iBAAiB,EAAOA,gBAEvE,IAAIuM,EACJ,GAAId,EAAkB,CAClB,MAAMqD,EAAalD,EAAcE,OAAOgD,WACxCvC,EAAexO,KAAK6C,QAAQ,iBAAiBkO,KAAc9O,IAAOa,EAAQ,CACtEV,OAAQ,IAAMpC,KAAKgR,0BAA0BnD,EAAe/K,IAEpE,MAEI0L,EAAexO,KAAK6C,QAAQgL,EAAc6B,cAAe5M,GAE7D,OAAQ0H,GAAWA,EAAOM,WAAW0D,EAAa7M,GAAI,EAAOM,GAAM2M,EACvE,CACAoC,0BAA0BnD,EAAe/K,GACrC,MAAMwL,EAAgBT,EAAcc,WAAWL,gBACzC9D,GAAS,IAAId,GAASa,MAAM,QAAS,WACrCkB,EAAKjB,EAAOe,OAAO,0BAKzB,OAJA+C,EAAcb,OAAOpG,SAAQ,CAACnF,EAAOqM,KACjC,MAAMC,EAAexO,KAAK6C,QAAQX,EAAOY,GACzC2I,EAAGQ,KAAK,KAAI,IAAAtL,QAAOuB,OAAW6I,iBAAiByD,EAAa7M,GAAI,QAAQ,IAErE6I,EAAOpL,OAAOwE,UACzB,CACAgN,gBAAgBjP,GACZ,MAAM6I,EAAS,IAAId,EAGnB,OAFAc,EAAOY,GAAG,gCAAgCJ,OAAOtB,EAAOuH,WAAW,QAAS,qBAAqBtP,QACjG6I,EAAOY,GAAG,wBAAwBJ,OAAO,oCAAoCrJ,QACtE6I,CACX,CACAqG,yBAAyBzD,GACrB,GAAIA,EAAO8D,sBAAuB,CAC9B,MAAM5C,EAAgBlB,EAAO8D,sBAAsB1M,OAAO8J,gBACpDzK,EAAOyK,EAAc6C,gBAAgB/D,EAAO9G,QAClD,GAAIzC,EAAM,CACN,MAAM2G,EAAS,IAAId,EAEnB,OADAc,EAAOY,GAAG,QAAQkD,EAAcR,gBAAgBlM,IAAI,OAAO0M,EAAcR,eAAgB,IAAIjK,MACtF2G,CACX,CACJ,CACJ,CACA4D,wBAAwBhB,EAAQE,GAE5B,GAD+BF,EAAO5I,OAAOzC,IAAI,wBACvB,CACtB,MAAMkO,EAAU,IAAI3C,EAAWG,UAAUlM,KAAKU,GAAQ,IAAIA,OAAQQ,KAAK,MACjE+H,EAAS,IAAId,EAGnB,OAFAc,EAAOJ,IAAI,gCACXI,EAAOU,KAAK,oBAAqB,CAAC,QAAQE,GAAG,KAAK6E,oBAA0BrO,IAAI,WAAY,cACrF4I,CACX,CACJ,CACAgC,UAAUhB,GAAO,KAAE3H,KAASjB,IACxB,OAAK4I,IAAS,IAAA4F,aAAY5F,KAAYA,EAE3BA,EAEPA,IAAS,IAAAjL,cAAaiL,GACfxL,KAAKsB,WAlME,CAACkK,IAChB,IAAAwB,SAAQxB,GAAS,QAAUA,aAAiBzH,IAAM,MAAQyH,aAAiBtL,IAAM,WAAQ+E,EAiMjEoM,CAAkB7F,GAAQA,EAAO5I,IAExD,IAAAhC,eAAc4K,GACPxL,KAAKyQ,QAAQjF,EAAO5I,GAExB0N,EAAoB9E,GACtB3B,QAAO,EAAE,CAAE3H,UAAqB+C,IAAV/C,IACtBoP,QAAO,CAAC1L,GAAM3D,EAAKC,MACpB,IAAI,IAAApB,OAAMoB,GACN,MAAO,IACA0D,EACH,CAAC3D,GAAMC,GAGf,MAAME,EAASpC,KAAK6C,SAAQ,IAAAnC,SAAQwB,GAAQU,EAAQE,QACpD,MAAO,IACA8C,EACH,CAAC3D,GAAMG,EAAOV,GAAGQ,EAAOU,GAC3B,GACF,CAAC,EACR,CACA+J,OAAOnB,EAAO5I,GACV,OAAI,IAAA9B,OAAM0K,GACCA,EAEJ,IAAIA,EAAMiC,UAAUlM,KAAKsJ,GACrB7K,KAAKmQ,QAAQtF,EAAMjI,IAElC,CACA6J,SAASjB,EAAO5I,GACZ,OAAI,IAAA9B,OAAM0K,GACCA,EAEJ,GAAG4E,OAAO5E,GAAOjK,KAAKsJ,GAClB7K,KAAKmQ,QAAQtF,EAAMjI,IAElC,CACA8J,OAAOlB,EAAO5I,GACV,OAAI,IAAA9B,OAAM0K,GACCA,EAEJ,IAAIA,EAAMW,WAAWmF,QAAO,CAAC1L,GAAM3D,EAAK4I,MACpC,IACAjF,EACH,CAAC3D,GAAMjC,KAAKmQ,QAAQtF,EAAMjI,MAE/B,CAAC,EACR,CACAuN,QAAQ3E,GAAO,GAAE7J,KAAOiB,IACpB,OAAKjB,GAAM6J,EACAxL,KAAK6C,SAAQ,IAAAnC,SAAQ8K,GAAQ5I,EAAQE,QAAQpB,GAAG8J,EAAO5I,GAE3DjB,EAAK3B,KAAKsB,WAAWK,EAAI6J,EAAO5I,GAAW4I,CACtD,CACAiF,QAAQjF,GAAO,GAAE7J,KAAOiB,IACpB,OAAI,IAAA/B,kBAAiB2K,GACVA,EAAM+F,OAAO,IAAK3O,EAASjB,QAEtCA,EAAKA,IAAM,IAAAhB,SAAO,IAAAD,SAAQ8K,IACtBxL,KAAKG,QAAQwB,MAAQ,IAAAZ,QAAOyK,KAAU,IAAAvK,gBAAeuK,IAC9CxL,KAAKsB,WAAWK,EAAI6J,EAAO5I,IAEtC4I,EAAQA,EAAM+F,UACP,IAAA9Q,UAAS+K,GAASxL,KAAKsB,WAAWK,EAAI6J,EAAO5I,GAAW4I,GACnE,ECtQJ,MAAMgG,EAAe,IAAIlF,EAClB,SAAS/E,EAAYiE,EAAO5I,GAC/B,OAAO4O,EAAajQ,IAAIiK,EAAO5I,EACnC,CCHA,MAAM6O,EAAa,IAAIjB,EAChB,SAAS7I,EAAU6D,EAAO5I,GAC7B,OAAO6O,EAAWlQ,IAAIiK,EAAO5I,EACjC,C","sources":["webpack://@tsed/json-mapper/webpack/universalModuleDefinition","webpack://@tsed/json-mapper/./src/domain/JsonMapperCompiler.ts","webpack://@tsed/json-mapper/external umd \"@tsed/core\"","webpack://@tsed/json-mapper/external umd \"@tsed/schema\"","webpack://@tsed/json-mapper/webpack/bootstrap","webpack://@tsed/json-mapper/webpack/runtime/compat get default export","webpack://@tsed/json-mapper/webpack/runtime/define property getters","webpack://@tsed/json-mapper/webpack/runtime/hasOwnProperty shorthand","webpack://@tsed/json-mapper/webpack/runtime/make namespace object","webpack://@tsed/json-mapper/../../../node_modules/tslib/tslib.es6.mjs","webpack://@tsed/json-mapper/./src/domain/JsonMapperTypesContainer.ts","webpack://@tsed/json-mapper/./src/decorators/jsonMapper.ts","webpack://@tsed/json-mapper/./src/components/DateMapper.ts","webpack://@tsed/json-mapper/./src/components/PrimitiveMapper.ts","webpack://@tsed/json-mapper/./src/components/SymbolMapper.ts","webpack://@tsed/json-mapper/./src/decorators/afterDeserialize.ts","webpack://@tsed/json-mapper/./src/decorators/beforeDeserialize.ts","webpack://@tsed/json-mapper/./src/decorators/onDeserialize.ts","webpack://@tsed/json-mapper/./src/decorators/onSerialize.ts","webpack://@tsed/json-mapper/./src/hooks/alterAfterDeserialize.ts","webpack://@tsed/json-mapper/./src/hooks/alterBeforeDeserialize.ts","webpack://@tsed/json-mapper/./src/hooks/alterOnDeserialize.ts","webpack://@tsed/json-mapper/./src/domain/JsonMapperSettings.ts","webpack://@tsed/json-mapper/./src/domain/Writer.ts","webpack://@tsed/json-mapper/./src/domain/JsonDeserializer.ts","webpack://@tsed/json-mapper/./src/hooks/alterOnSerialize.ts","webpack://@tsed/json-mapper/./src/utils/getObjectProperties.ts","webpack://@tsed/json-mapper/./src/domain/JsonSerializer.ts","webpack://@tsed/json-mapper/./src/utils/deserialize.ts","webpack://@tsed/json-mapper/./src/utils/serialize.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@tsed/core\"), require(\"@tsed/schema\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@tsed/core\", \"@tsed/schema\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@tsed/json-mapper\"] = factory(require(\"@tsed/core\"), require(\"@tsed/schema\"));\n\telse\n\t\troot[\"@tsed/json-mapper\"] = factory(root[\"@tsed/core\"], root[\"@tsed/schema\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__803__, __WEBPACK_EXTERNAL_MODULE__953__) => {\nreturn ","import { ancestorsOf, classOf, getRandomId, hasJsonMethod, isClass, isCollection, isDate, isMomentObject, isMongooseObject, isNil, isObject, isObjectID, isString, nameOf, objectKeys } from \"@tsed/core\";\nexport class JsonMapperCompiler {\n    constructor() {\n        /**\n         * Cached mappers metadata\n         * @protected\n         */\n        this.cache = new Map();\n        /**\n         * Cached executable mappers by his id\n         * @protected\n         */\n        this.mappers = {};\n        /**\n         * Cached schemas\n         * @protected\n         */\n        this.schemes = {};\n        /**\n         * Cached classes by his id\n         * @protected\n         */\n        this.constructors = {};\n        /**\n         * Global variables available in the mapper\n         * @protected\n         */\n        this.globals = {\n            isCollection,\n            isClass,\n            isObject,\n            classOf,\n            nameOf,\n            hasJsonMethod,\n            isMongooseObject,\n            isNil,\n            isDate,\n            objectKeys,\n            isMomentObject\n        };\n        this.addGlobal(\"alterIgnore\", this.alterIgnore.bind(this));\n        this.addGlobal(\"alterValue\", this.alterValue.bind(this));\n        this.addGlobal(\"execMapper\", this.execMapper.bind(this));\n        this.addGlobal(\"compileAndMap\", this.map.bind(this));\n    }\n    addTypeMapper(model, fn) {\n        const id = nameOf(model);\n        this.cache.set(model, new Map().set(\"typeMapper\", {\n            id,\n            fn\n        }));\n        this.mappers[id] = fn;\n        return this;\n    }\n    removeTypeMapper(model) {\n        const store = this.cache.get(model);\n        if (store) {\n            const { id } = store.get(\"typeMapper\");\n            delete this.mappers[id];\n            this.cache.delete(model);\n        }\n    }\n    addGlobal(key, value) {\n        this.globals[key] = value;\n        return this;\n    }\n    eval(mapper, { id, groupsId, model }) {\n        this.addGlobal(\"cache\", this.cache);\n        const { globals, schemes } = this;\n        const injectGlobals = Object.keys(globals)\n            .map((name) => {\n            return `const ${name} = globals.${name};`;\n        })\n            .join(\"\\n\");\n        eval(`${injectGlobals};\n\n    cache.get(model).set(groupsId, { id: '${id}', fn: ${mapper} })`);\n        const store = this.cache.get(model).get(groupsId);\n        this.mappers[id] = store.fn;\n        return store;\n    }\n    createContext(options) {\n        const { cache } = this;\n        return {\n            ...options,\n            cache\n        };\n    }\n    compile(model, groups, opts = {}) {\n        const token = isString(model) ? model : this.getType(model);\n        const groupsId = this.getGroupsId(groups);\n        let storeGroups = this.cache.get(token) || this.cache.get(nameOf(token));\n        if (!storeGroups) {\n            storeGroups = new Map();\n            this.cache.set(token, storeGroups);\n        }\n        if (storeGroups.has(\"typeMapper\")) {\n            return storeGroups.get(\"typeMapper\");\n        }\n        // generate mapper for the given groups\n        if (!storeGroups.has(groupsId)) {\n            const id = this.getId(token, groupsId);\n            // prevent circular dependencies\n            storeGroups.set(groupsId, {\n                id\n            });\n            const mapper = opts.mapper ? opts.mapper(id, groups) : this.createMapper(token, id, groups);\n            try {\n                return this.eval(mapper, { id, model: token, groupsId });\n            }\n            catch (err) {\n                throw new Error(`Fail to compile mapper for ${nameOf(model)}. See the error above: ${err.message}.\\n${mapper}`);\n            }\n        }\n        return storeGroups.get(groupsId);\n    }\n    execMapper(id, value, options) {\n        if (isObjectID(value)) {\n            return value.toString();\n        }\n        return this.mappers[id || nameOf(classOf(value))](value, options);\n    }\n    getType(model) {\n        if (!model) {\n            return Object;\n        }\n        if (isClass(model) && !isCollection(model)) {\n            const type = [Array, Map, Set].find((t) => ancestorsOf(model).includes(t));\n            if (type) {\n                return type;\n            }\n        }\n        return model;\n    }\n    alterIgnore(id, options) {\n        let result = this.schemes[id]?.$hooks?.alter(\"ignore\", false, [options]);\n        if (result) {\n            return result;\n        }\n    }\n    alterGroups(schema, groups) {\n        if (groups !== false) {\n            return schema.$hooks.alter(\"groups\", false, [groups]);\n        }\n        return false;\n    }\n    getGroupsId(groups) {\n        if (groups === false) {\n            return \"default\";\n        }\n        if (groups.length === 0) {\n            return \"-\";\n        }\n        return groups.join(\",\");\n    }\n    getId(model, groupsId) {\n        return `${isString(model) ? model : nameOf(model)}:${getRandomId()}:${groupsId}`;\n    }\n    getSchemaId(id, propertyKey) {\n        return `${id}:${propertyKey}`;\n    }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__803__;","module.exports = __WEBPACK_EXTERNAL_MODULE__953__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * @ignore\n */\n// tslint:disable-next-line:variable-name\nconst JsonMapperTypesContainer = new Map();\n/**\n * @ignore\n */\nexport function registerJsonTypeMapper(type, token) {\n    JsonMapperTypesContainer.set(type, new token());\n}\n/**\n * @ignore\n */\nexport function getJsonMapperTypes() {\n    return JsonMapperTypesContainer;\n}\n","import { registerJsonTypeMapper } from \"../domain/JsonMapperTypesContainer.js\";\n/**\n * Register a new JsonMapper Type\n * @param types\n * @constructor\n */\nexport function JsonMapper(...types) {\n    return (target) => {\n        types.forEach((type) => {\n            registerJsonTypeMapper(type, target);\n        });\n    };\n}\n","import { __decorate } from \"tslib\";\nimport { isBoolean } from \"@tsed/core\";\nimport { JsonMapper } from \"../decorators/jsonMapper.js\";\n/**\n * Mapper for `Date` type.\n * @jsonmapper\n * @component\n */\nlet DateMapper = class DateMapper {\n    deserialize(data) {\n        // don't convert unexpected data. In normal case, Ajv reject unexpected data.\n        // But by default, we have to skip data deserialization and let user to apply\n        // the right mapping\n        if (isBoolean(data) || data === null || data === undefined) {\n            return data;\n        }\n        return new Date(data);\n    }\n    serialize(object) {\n        return object ? new Date(object).toISOString() : object;\n    }\n};\nDateMapper = __decorate([\n    JsonMapper(Date)\n], DateMapper);\nexport { DateMapper };\n","import { __decorate } from \"tslib\";\nimport { nameOf } from \"@tsed/core\";\nimport { JsonMapper } from \"../decorators/jsonMapper.js\";\nfunction isNullish(data) {\n    return [null, \"null\"].includes(data);\n}\nexport class CastError extends Error {\n    constructor(message) {\n        super(`Cast error. ${message}`);\n        this.name = \"CAST_ERROR\";\n    }\n}\n/**\n * Mapper for the `String`, `Number`, `BigInt` and `Boolean` types.\n * @jsonmapper\n * @component\n */\nlet PrimitiveMapper = class PrimitiveMapper {\n    deserialize(data, ctx) {\n        return this[nameOf(ctx.type)] ? this[nameOf(ctx.type)](data, ctx) : undefined;\n    }\n    serialize(object, ctx) {\n        return this[nameOf(ctx?.type)] && typeof object !== \"object\" ? this[nameOf(ctx.type)](object, ctx) : object;\n    }\n    String(data) {\n        return data === null ? null : \"\" + data;\n    }\n    Boolean(data) {\n        if ([\"true\", \"1\", true].includes(data))\n            return true;\n        if ([\"false\", \"0\", false].includes(data))\n            return false;\n        if (isNullish(data))\n            return null;\n        if (data === undefined)\n            return undefined;\n        return !!data;\n    }\n    Number(data) {\n        if (isNullish(data))\n            return null;\n        if (data === undefined)\n            return data;\n        const n = +data;\n        if (isNaN(n)) {\n            throw new CastError(\"Expression value is not a number.\");\n        }\n        return n;\n    }\n    BigInt(data) {\n        if (isNullish(data))\n            return null;\n        return BigInt(data);\n    }\n};\nPrimitiveMapper = __decorate([\n    JsonMapper(String, Number, Boolean, BigInt)\n], PrimitiveMapper);\nexport { PrimitiveMapper };\n","import { __decorate } from \"tslib\";\nimport { JsonMapper } from \"../decorators/jsonMapper.js\";\n/**\n * Mapper for the `Symbol` type.\n *\n * @jsonmapper\n * @component\n */\nlet SymbolMapper = class SymbolMapper {\n    deserialize(data) {\n        return Symbol.for(data);\n    }\n    serialize(object) {\n        return object.toString().replace(\"Symbol(\", \"\").replace(\")\", \"\");\n    }\n};\nSymbolMapper = __decorate([\n    JsonMapper(Symbol)\n], SymbolMapper);\nexport { SymbolMapper };\n","import { JsonEntityFn } from \"@tsed/schema\";\n/**\n * Call the function after JsonMapper.\n *\n * ## Example\n *\n * ```typescript\n * @AfterDeserialize((data: Model) => { // After deserialize get the instance class\n *    if (data.prop1 === 'VALUE' && data.prop2 !== 'VALUE2') {\n *      throw BadRequest('MyMessage'); // or throw a ValidationError\n *    } else {\n *      data.prop2 = 'VALUE2';\n *      return data;\n *    }\n * })\n * class Model {\n *    @Property()\n *    prop1: string;\n *    @Property()\n *    prop2: string;\n * }\n * ```\n *\n * @returns {Function}\n * @decorator\n * @schema\n * @property\n * @param cb\n */\nexport function AfterDeserialize(cb) {\n    return JsonEntityFn((storedJson) => {\n        storedJson.schema.$hooks.on(\"afterDeserialize\", cb);\n    });\n}\n","import { JsonEntityFn } from \"@tsed/schema\";\n/**\n * Call the function before JsonMapper.\n *\n * ## Example\n *\n * ```typescript\n * @BeforeDeserialize((data: Record<string, unknown>) => { // Before deserialize get the data\n *    if (data.prop1 === 'VALUE' && data.prop2 !== 'VALUE2') {\n *      throw BadRequest('MyMessage'); // or throw a ValidationError\n *    } else {\n *      data.prop2 = 'VALUE2';\n *      return data;\n *    }\n * })\n * class Model {\n *    @Property()\n *    prop1: string;\n *    @Property()\n *    prop2: string;\n * }\n * ```\n *\n * @returns {Function}\n * @decorator\n * @schema\n * @property\n * @param cb\n */\nexport function BeforeDeserialize(cb) {\n    return JsonEntityFn((storedJson) => {\n        storedJson.schema.$hooks.on(\"beforeDeserialize\", cb);\n    });\n}\n","import { JsonEntityFn } from \"@tsed/schema\";\n/**\n * Call the function before property deserialization.\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @OnDeserialize(v => v + 1)\n *    property: string;\n * }\n * ```\n *\n * @returns {Function}\n * @decorator\n * @schema\n * @property\n * @param cb\n */\nexport function OnDeserialize(cb) {\n    return JsonEntityFn((storedJson) => {\n        storedJson.schema.$hooks.on(\"onDeserialize\", cb);\n    });\n}\n","import { JsonEntityFn } from \"@tsed/schema\";\n/**\n * Call the function before property serialization.\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @OnSerialize(v => v + 1)\n *    property: string;\n * }\n * ```\n *\n * @returns {Function}\n * @decorator\n * @schema\n * @property\n * @param cb\n */\nexport function OnSerialize(cb) {\n    return JsonEntityFn((storedJson) => {\n        storedJson.schema.$hooks.on(\"onSerialize\", cb);\n    });\n}\n","export function alterAfterDeserialize(data, schema, options) {\n    return schema?.$hooks?.alter(\"afterDeserialize\", data, [options]);\n}\n","export function alterBeforeDeserialize(data, schema, options) {\n    return schema?.$hooks?.alter(\"beforeDeserialize\", data, [options]);\n}\n","export function alterOnDeserialize(schema, value, options) {\n    return schema.$hooks.alter(\"onDeserialize\", value, [options]);\n}\n","export const JsonMapperSettings = {\n    disableUnsecureConstructor: true,\n    additionalProperties: false,\n    strictGroups: false\n};\n","export class Writer {\n    static { this.object = {\n        assign(...args) {\n            return `{ ${args.filter(Boolean).join(\", \")} }`;\n        }\n    }; }\n    constructor(root) {\n        this.body = [];\n        this._root = root;\n    }\n    static indent(lines) {\n        return lines.map((p) => `\\t${p}`);\n    }\n    static mapper(mapperId, key, options) {\n        return `execMapper('${mapperId}', ${key}, ${options})`;\n    }\n    static mapperFrom(key, options) {\n        return `execMapper(nameOf(classOf(${key})), ${key}, ${options})`;\n    }\n    static options(...args) {\n        args = args.filter(Boolean);\n        return !args.length ? \"options\" : Writer.object.assign(\"...options\", ...args);\n    }\n    add(...lines) {\n        lines = lines.filter((line) => line !== undefined);\n        lines.length && this.body.push(...lines);\n        return this;\n    }\n    arrow(...args) {\n        this.add(`(${args}) => {`);\n        const writer = this.new();\n        this.add(\"}\");\n        return writer;\n    }\n    build() {\n        const result = this.body.flatMap((line) => {\n            return line instanceof Writer ? line.build() : line;\n        });\n        return this._indent ? result.map((item) => \"\\t\" + item) : result;\n    }\n    callMapper(id, key, ...options) {\n        return this.set(key, Writer.mapper(id, key, Writer.options(...options)));\n    }\n    returnCallMapper(id, key, ...options) {\n        return this.return(Writer.mapper(id, key, Writer.options(...options)));\n    }\n    const(name, line) {\n        this.add(`const ${name} = ${line};`);\n        return this;\n    }\n    each(iterable, args = []) {\n        const writer = this.add(iterable + \".forEach((\" + args.join(\", \") + \") => {\").new();\n        this.add(\"});\");\n        return writer;\n    }\n    if(condition) {\n        const writer = new IfWriter(condition, this);\n        this.add(writer);\n        return writer;\n    }\n    switch(input) {\n        const sw = new SwitchWriter(input);\n        this.add(sw);\n        return sw;\n    }\n    indent(indent) {\n        this._indent = indent;\n        return this;\n    }\n    new(indent = true) {\n        const writer = new Writer(this.root());\n        writer.indent(indent);\n        this.add(writer);\n        return writer;\n    }\n    return(line) {\n        this.add(`return ${line};`);\n        return this.root();\n    }\n    root() {\n        return this._root || this;\n    }\n    set(left, right) {\n        this.add(`${left} = ${right};`);\n        return this;\n    }\n    toString() {\n        return this.build().join(\"\\n\");\n    }\n}\nclass IfWriter extends Writer {\n    constructor(condition, root) {\n        super();\n        this.condition = condition;\n        this._root = root;\n    }\n    else() {\n        const writer = new Writer(this._root);\n        this.elseWriter = writer;\n        return writer;\n    }\n    build() {\n        return [\n            `if (${this.condition}) {`,\n            ...Writer.indent(super.build()),\n            \"}\",\n            this.elseWriter ? [`else {`, ...Writer.indent(this.elseWriter.build()), \"}\"] : []\n        ].flat();\n    }\n}\nclass SwitchWriter extends Writer {\n    #map;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.#map = new Map();\n    }\n    case(condition) {\n        const writer = new Writer();\n        this.#map.set(condition, writer);\n        return writer;\n    }\n    build() {\n        return [\n            `switch (${this.input}) {`,\n            ...Writer.indent(Array.from(this.#map.entries()).flatMap(([condition, writer]) => {\n                return [condition === \"default\" ? `${condition}:` : `case ${condition}:`, ...Writer.indent(writer.build())];\n            })),\n            \"}\"\n        ].flat();\n    }\n}\n","import { classOf, isArray, isBoolean, isClass, isEmpty, isNil, nameOf, objectKeys } from \"@tsed/core\";\nimport { getPropertiesStores, JsonEntityStore, JsonParameterStore } from \"@tsed/schema\";\nimport { alterAfterDeserialize } from \"../hooks/alterAfterDeserialize.js\";\nimport { alterBeforeDeserialize } from \"../hooks/alterBeforeDeserialize.js\";\nimport { alterOnDeserialize } from \"../hooks/alterOnDeserialize.js\";\nimport { JsonMapperCompiler } from \"./JsonMapperCompiler.js\";\nimport { JsonMapperSettings } from \"./JsonMapperSettings.js\";\nimport { getJsonMapperTypes } from \"./JsonMapperTypesContainer.js\";\nimport { Writer } from \"./Writer.js\";\nfunction isDeserializable(obj, options) {\n    if ((!!options.collectionType && isNil(obj)) || obj === undefined) {\n        return false;\n    }\n    return !(isEmpty(options.type) || (options.type === Object && !options.collectionType));\n}\nfunction varKey(k) {\n    return `__${k}`;\n}\nfunction mapParamStoreOptions(store, options) {\n    return {\n        ...options,\n        store: undefined,\n        type: store.getBestType(),\n        collectionType: store.collectionType,\n        groups: store.parameter.groups,\n        // genericTypes: store.nestedGenerics[0],\n        generics: store.nestedGenerics\n    };\n}\nfunction getGenericIndex(propertyStore) {\n    return propertyStore.parent.schema.genericLabels.indexOf(propertyStore.itemSchema.genericType);\n}\nexport class JsonDeserializer extends JsonMapperCompiler {\n    constructor() {\n        super();\n        /**\n         * Cached classes by his id\n         * @protected\n         */\n        this.constructors = {};\n        this.addGlobal(\"newInstanceOf\", this.newInstanceOf.bind(this));\n        this.addGlobal(\"alterBeforeDeserialize\", this.alterBeforeDeserialize.bind(this));\n        this.addGlobal(\"alterAfterDeserialize\", this.alterAfterDeserialize.bind(this));\n        this.addTypeMapper(Object, this.mapObject.bind(this));\n        this.addTypeMapper(Array, this.mapArray.bind(this));\n        this.addTypeMapper(Map, this.mapMap.bind(this));\n        this.addTypeMapper(Set, this.mapSet.bind(this));\n        this.addTypeMapper(\"ObjectId\", (value) => String(value));\n    }\n    map(input, options = {}) {\n        options = this.mapOptions(options);\n        if (!isDeserializable(input, options)) {\n            return input;\n        }\n        if (!options.collectionType && isArray(input)) {\n            options.collectionType = Array;\n        }\n        const model = options.type || classOf(input);\n        const mapper = this.compile(model, options.groups);\n        if (options.collectionType) {\n            const collectionMapper = this.compile(options.collectionType, options.groups);\n            return collectionMapper.fn(input, { ...options, id: mapper.id });\n        }\n        return mapper.fn(input, this.createContext(options));\n    }\n    compile(model, groups) {\n        if ([WeakMap, WeakSet].includes(model)) {\n            throw new Error(`${nameOf(model)} is not supported by JsonMapper.`);\n        }\n        return super.compile(model, groups);\n    }\n    eval(mapper, { id, groupsId, model }) {\n        this.constructors[id] = model;\n        return super.eval(mapper, { id, groupsId, model });\n    }\n    newInstanceOf(id, obj, options) {\n        try {\n            return new this.constructors[id](options.disableUnsecureConstructor ? {} : obj);\n        }\n        catch (er) {\n            return obj;\n        }\n    }\n    createMapper(model, id, groups) {\n        const entity = JsonEntityStore.from(model);\n        const properties = new Set();\n        const schemaProperties = [...getPropertiesStores(entity).values()];\n        const writer = new Writer().arrow(\"input\", \"options\");\n        writer.if(\"isNil(input)\").return(\"input\");\n        if (entity.schema.hasDiscriminator) {\n            writer.add(this.mapDiscriminator(entity, groups));\n        }\n        // pre hook\n        if (entity.schema.$hooks?.has(\"beforeDeserialize\")) {\n            this.schemes[id] = entity.schema;\n            writer.set(\"input\", `alterBeforeDeserialize('${id}', input, options)`);\n        }\n        // generics and options\n        writer.const(\"generics\", \"options.generics[0]\");\n        if (entity.schema.genericLabels?.length) {\n            writer.set(\"options\", \"{...options, self: input, generics: [...options.generics].slice(1)}\");\n        }\n        else {\n            writer.set(\"options\", \"{...options, self: input}\");\n        }\n        writer.const(\"obj\", `newInstanceOf('${id}', input, options)`);\n        // properties\n        writer.add(...schemaProperties.flatMap((propertyStore) => {\n            const key = propertyStore.propertyName;\n            // TODO V8 add this line: properties.add(key as string);\n            properties.add(String(propertyStore.parent.schema.getAliasOf(key) || key));\n            if ((propertyStore.schema?.$ignore && isBoolean(propertyStore.schema?.$ignore)) ||\n                propertyStore.isGetterOnly() ||\n                (propertyStore.schema?.$hooks?.has(\"groups\") && this.alterGroups(propertyStore.schema, groups))) {\n                return;\n            }\n            return this.mapProperty(propertyStore, id, groups);\n        }));\n        // additional properties\n        writer.add(this.mapAdditionalProperties(entity, properties, groups));\n        // post hook\n        if (entity.schema.$hooks?.has(\"afterDeserialize\")) {\n            this.schemes[id] = entity.schema;\n            return writer.return(`alterAfterDeserialize('${id}', obj, options)`).root().toString();\n        }\n        return writer.return(\"obj\").root().toString();\n    }\n    alterValue(schemaId, value, options) {\n        return alterOnDeserialize(this.schemes[schemaId], value, options);\n    }\n    mapDiscriminator(entity, groups) {\n        const writer = new Writer();\n        const discriminator = entity.schema.discriminator();\n        const sw = writer.switch(`input['${discriminator.propertyName}']`);\n        discriminator.values.forEach((value, kind) => {\n            const nestedMapper = this.compile(value, groups);\n            sw.case(`'${kind}'`).returnCallMapper(nestedMapper.id, \"input\");\n        });\n        return writer;\n    }\n    mapProperty(propertyStore, id, groups) {\n        const key = String(propertyStore.propertyKey);\n        const aliasKey = String(propertyStore.parent.schema.getAliasOf(key) || key);\n        const schemaId = this.getSchemaId(id, key);\n        const format = propertyStore.itemSchema.get(\"format\");\n        const formatOpts = format && `options: {format: '${format}'}`;\n        let writer = new Writer().add(`// Map ${key} ${id} ${groups || \"\"}`);\n        const pick = key !== aliasKey ? `options.useAlias ? '${aliasKey}' : '${key}'` : `'${key}'`;\n        // ignore hook (deprecated)\n        if (propertyStore.schema?.$hooks?.has(\"ignore\")) {\n            this.schemes[schemaId] = propertyStore.schema;\n            writer = writer.if(`!alterIgnore('${schemaId}', {...options, self: input})`);\n        }\n        // pre hook\n        const hasDeserializer = propertyStore.schema?.$hooks?.has(\"onDeserialize\");\n        let getter = `input[${pick}]`;\n        if (hasDeserializer) {\n            this.schemes[schemaId] = propertyStore.schema;\n            const opts = Writer.options(formatOpts);\n            getter = `alterValue('${schemaId}', input[${pick}], ${opts})`;\n        }\n        const ifWriter = writer.set(`let ${varKey(key)}`, getter).if(`${varKey(key)} !== undefined`);\n        const fill = this.getPropertyFiller(propertyStore, id, groups, formatOpts);\n        if (hasDeserializer) {\n            fill(ifWriter.if(`${varKey(key)} === input.${key}`));\n        }\n        else {\n            fill(ifWriter);\n        }\n        ifWriter.set(`obj.${key}`, varKey(key));\n        if (groups && groups.includes(\"partial\")) {\n            ifWriter.else().add(`delete obj.${key}`);\n        }\n        return writer.root();\n    }\n    getPropertyFiller(propertyStore, id, groups, formatOpts) {\n        const key = String(propertyStore.propertyKey);\n        const schemaId = this.getSchemaId(id, key);\n        const generics = propertyStore.itemSchema.nestedGenerics;\n        const isGeneric = propertyStore.itemSchema.isGeneric && !generics?.length;\n        if (isGeneric) {\n            const index = getGenericIndex(propertyStore);\n            const opts = Writer.options(formatOpts, `type: generics[${index}]`);\n            return (writer) => writer.set(varKey(key), `compileAndMap(${varKey(key)}, ${opts})`);\n        }\n        const type = propertyStore.itemSchema.hasDiscriminator ? propertyStore.itemSchema.discriminator().base : propertyStore.getBestType();\n        const nestedMapper = this.compile(type, groups);\n        if (propertyStore.isCollection) {\n            return (writer) => writer.callMapper(nameOf(propertyStore.collectionType), varKey(key), `id: '${nestedMapper.id}'`, formatOpts);\n        }\n        if (generics?.length) {\n            this.schemes[schemaId] = propertyStore.schema;\n            return (writer) => writer.callMapper(nestedMapper.id, varKey(key), formatOpts, `generics: schemes['${schemaId}'].nestedGenerics`);\n        }\n        return (writer) => writer.callMapper(nestedMapper.id, varKey(key), formatOpts);\n    }\n    mapOptions({ groups, useAlias = true, types, ...options }) {\n        if (options.store instanceof JsonParameterStore) {\n            return this.mapOptions(mapParamStoreOptions(options.store, options));\n        }\n        const customMappers = {};\n        types = types || getJsonMapperTypes();\n        types.forEach((mapper, model) => {\n            if (![Array, Set, Map].includes(model)) {\n                const typeName = nameOf(model);\n                if (nameOf(model) in mapper) {\n                    this.addTypeMapper(model, mapper[typeName].bind(mapper));\n                }\n                else {\n                    this.addTypeMapper(model, (value, options) => mapper.deserialize(value, {\n                        ...options,\n                        type: model\n                    }));\n                }\n            }\n        });\n        const strictGroups = options.strictGroups ?? JsonMapperSettings.strictGroups;\n        return {\n            ...options,\n            additionalProperties: options.additionalProperties ?? JsonMapperSettings.additionalProperties,\n            disableUnsecureConstructor: options.disableUnsecureConstructor ?? JsonMapperSettings.disableUnsecureConstructor,\n            groups: groups === undefined ? (strictGroups ? [] : false) : groups || false,\n            useAlias,\n            customMappers,\n            generics: options.generics || []\n        };\n    }\n    mapAdditionalProperties(entity, properties, groups) {\n        const additionalProperties = entity.schema.get(\"additionalProperties\");\n        const exclude = [...properties.values()].map((key) => `'${key}'`).join(\", \");\n        const writer = new Writer();\n        writer.add(\"// add additional properties\");\n        let each = writer.each(\"objectKeys(input)\", [\"key\"]);\n        if (exclude.length) {\n            each = each.if(`![${exclude}].includes(key)`);\n        }\n        if (isClass(additionalProperties)) {\n            const nestedMapper = this.compile(additionalProperties.getComputedType(), groups);\n            each.set(\"obj[key]\", Writer.mapper(nestedMapper.id, \"input[key]\", \"options\"));\n            return writer;\n        }\n        if (additionalProperties) {\n            each.set(\"obj[key]\", \"input[key]\");\n            return writer;\n        }\n        // dynamic additional properties options\n        each.if(`options.additionalProperties && obj[key] === undefined`).set(\"obj[key]\", \"input[key]\");\n        return writer;\n    }\n    mapObject(input, options) {\n        return input;\n    }\n    mapSet(input, options) {\n        if (isNil(input)) {\n            return input;\n        }\n        const obj = new Set();\n        objectKeys(input).forEach((key) => {\n            obj.add(this.mapItem(input[key], options));\n        });\n        return obj;\n    }\n    mapArray(input, options) {\n        if (isNil(input)) {\n            return input;\n        }\n        return [].concat(input).map((item) => {\n            return this.mapItem(item, options);\n        });\n    }\n    mapMap(input, options) {\n        if (isNil(input)) {\n            return input;\n        }\n        const obj = new Map();\n        objectKeys(input).forEach((key) => {\n            obj.set(key, this.mapItem(input[key], options));\n        });\n        return obj;\n    }\n    mapItem(input, { id, ...options }) {\n        return this.execMapper(id, input, options);\n    }\n    alterBeforeDeserialize(schemaId, value, options) {\n        return alterBeforeDeserialize(value, this.schemes[schemaId], options);\n    }\n    alterAfterDeserialize(schemaId, value, options) {\n        return alterAfterDeserialize(value, this.schemes[schemaId], options);\n    }\n}\n","export function alterOnSerialize(schema, value, options) {\n    return schema.$hooks.alter(\"onSerialize\", value, [options]);\n}\n","import { isFunction } from \"@tsed/core\";\nexport function getObjectProperties(obj) {\n    return Object.entries(obj).filter(([, value]) => !isFunction(value));\n}\n","import { classOf, hasJsonMethod, isArray, isBoolean, isClassObject, isCollection, isDate, isMomentObject, isMongooseObject, isNil, isObject, isPrimitive, nameOf } from \"@tsed/core\";\nimport { getPropertiesStores, JsonEntityStore } from \"@tsed/schema\";\nimport { alterOnSerialize } from \"../hooks/alterOnSerialize.js\";\nimport { getObjectProperties } from \"../utils/getObjectProperties.js\";\nimport { JsonMapperCompiler } from \"./JsonMapperCompiler.js\";\nimport { JsonMapperSettings } from \"./JsonMapperSettings.js\";\nimport { getJsonMapperTypes } from \"./JsonMapperTypesContainer.js\";\nimport { Writer } from \"./Writer.js\";\nconst getCollectionType = (input) => {\n    return isArray(input) ? \"Array\" : input instanceof Set ? \"Set\" : input instanceof Map ? \"Map\" : undefined;\n};\nfunction getBestType(type, obj) {\n    const dataType = classOf(obj);\n    if (dataType && !isClassObject(dataType) && !isCollection(obj)) {\n        return dataType;\n    }\n    return type || Object;\n}\nfunction varKey(k) {\n    return `__${k}`;\n}\nexport class JsonSerializer extends JsonMapperCompiler {\n    constructor() {\n        super();\n        this.addTypeMapper(Object, this.mapObject.bind(this));\n        this.addTypeMapper(Array, this.mapArray.bind(this));\n        this.addTypeMapper(Map, this.mapMap.bind(this));\n        this.addTypeMapper(Set, this.mapSet.bind(this));\n        this.addGlobal(\"mapJSON\", this.mapJSON.bind(this));\n        this.addTypeMapper(\"ObjectId\", (value) => String(value));\n    }\n    map(input, options = {}) {\n        if (isNil(input)) {\n            return input;\n        }\n        options = this.mapOptions(options);\n        const model = getBestType(options.type, input);\n        const mapper = this.compile(model, options.groups);\n        return mapper.fn(input, this.createContext(options));\n    }\n    alterValue(schemaId, value, options) {\n        return alterOnSerialize(this.schemes[schemaId], value, options);\n    }\n    createMapper(model, id, groups) {\n        const entity = JsonEntityStore.from(model);\n        const properties = new Set();\n        const schemaProperties = [...getPropertiesStores(entity).values()];\n        const writer = new Writer().arrow(\"input\", \"options\");\n        writer.if(\"isNil(input)\").return(\"input\");\n        // prepare options\n        writer.const(\"obj\", \"{}\");\n        writer.set(\"options\", \"{...options, self: input}\");\n        // detect some special case\n        writer.add(this.mapPrecondition(id));\n        if (!schemaProperties.length) {\n            return writer.return(\"isObject(input) ? {...input} : input\").root().toString();\n        }\n        // properties\n        writer.add(...schemaProperties.flatMap((propertyStore) => {\n            properties.add(propertyStore.propertyKey);\n            if ((propertyStore.schema?.$ignore && isBoolean(propertyStore.schema?.$ignore)) ||\n                (propertyStore.schema?.$hooks?.has(\"groups\") && this.alterGroups(propertyStore.schema, groups))) {\n                return;\n            }\n            return this.mapProperty(propertyStore, id, groups);\n        }));\n        // discriminator\n        writer.add(this.mapDiscriminatorKeyValue(entity));\n        // additional properties\n        writer.add(this.mapAdditionalProperties(entity, properties));\n        return writer.return(\"obj\").root().toString();\n    }\n    mapOptions({ groups, useAlias = true, types, ...options }) {\n        const customMappers = {};\n        types = types || getJsonMapperTypes();\n        types.forEach((mapper, model) => {\n            if (![Array, Set, Map].includes(model)) {\n                this.addTypeMapper(model, (value, options) => mapper.serialize(value, {\n                    ...options,\n                    type: model\n                }));\n            }\n        });\n        const strictGroups = options.strictGroups ?? JsonMapperSettings.strictGroups;\n        return {\n            ...options,\n            groups: groups === undefined ? (strictGroups ? [] : false) : groups || false,\n            useAlias,\n            customMappers\n        };\n    }\n    mapProperty(propertyStore, id, groups) {\n        const key = String(propertyStore.propertyKey);\n        const aliasKey = String(propertyStore.parent.schema.getAliasOf(key) || key);\n        const schemaId = this.getSchemaId(id, key);\n        const format = propertyStore.itemSchema.get(\"format\");\n        const formatOpts = format && `options: {format: '${format}'}`;\n        let writer = new Writer().add(`// Map ${key} ${id} ${groups || \"\"}`);\n        // ignore hook (deprecated)\n        if (propertyStore.schema?.$hooks?.has(\"ignore\")) {\n            this.schemes[schemaId] = propertyStore.schema;\n            writer = writer.if(`!alterIgnore('${schemaId}', {...options, self: input})`);\n        }\n        // pre hook\n        const hasSerializer = propertyStore.schema?.$hooks?.has(\"onSerialize\");\n        let getter = `input.${key}`;\n        if (hasSerializer) {\n            this.schemes[schemaId] = propertyStore.schema;\n            const opts = Writer.options(formatOpts);\n            getter = `alterValue('${schemaId}', input.${key}, ${opts})`;\n        }\n        writer = writer.set(`let ${varKey(key)}`, getter).if(`${varKey(key)} !== undefined`);\n        const fill = this.getPropertyFiller(propertyStore, key, groups, formatOpts);\n        if (hasSerializer) {\n            fill(writer.if(`${varKey(key)} === input.${key}`));\n        }\n        else {\n            fill(writer);\n        }\n        if (aliasKey !== key) {\n            writer.set(`obj[options.useAlias ? '${aliasKey}' : '${key}']`, varKey(key));\n        }\n        else {\n            writer.set(`obj.${key}`, varKey(key));\n        }\n        return writer.root();\n    }\n    getPropertyFiller(propertyStore, key, groups, formatOpts) {\n        const isGeneric = propertyStore.itemSchema.isGeneric;\n        const hasDiscriminator = propertyStore.itemSchema.hasDiscriminator;\n        if (propertyStore.isCollection) {\n            const type = propertyStore.getBestType();\n            let nestedMapper;\n            if (hasDiscriminator) {\n                const targetName = propertyStore.parent.targetName;\n                nestedMapper = this.compile(`Discriminator:${targetName}:${key}`, groups, {\n                    mapper: () => this.createDiscriminatorMapper(propertyStore, groups)\n                });\n            }\n            else {\n                nestedMapper = isGeneric ? { id: \"\" } : this.compile(type, groups);\n            }\n            return (writer) => writer.callMapper(nameOf(propertyStore.collectionType), varKey(key), `id: '${nestedMapper.id}'`, formatOpts);\n        }\n        if (isGeneric) {\n            return (writer) => writer.set(varKey(key), `compileAndMap(${varKey(key)}, options)`);\n        }\n        let nestedMapper;\n        if (hasDiscriminator) {\n            const targetName = propertyStore.parent.targetName;\n            nestedMapper = this.compile(`Discriminator:${targetName}:${key}`, groups, {\n                mapper: () => this.createDiscriminatorMapper(propertyStore, groups)\n            });\n        }\n        else {\n            nestedMapper = this.compile(propertyStore.getBestType(), groups);\n        }\n        return (writer) => writer.callMapper(nestedMapper.id, varKey(key), formatOpts);\n    }\n    createDiscriminatorMapper(propertyStore, groups) {\n        const discriminator = propertyStore.itemSchema.discriminator();\n        const writer = new Writer().arrow(\"input\", \"options\");\n        const sw = writer.switch(`nameOf(classOf(input))`);\n        discriminator.values.forEach((value, kind) => {\n            const nestedMapper = this.compile(value, groups);\n            sw.case(`'${nameOf(value)}'`).returnCallMapper(nestedMapper.id, \"input\");\n        });\n        return writer.root().toString();\n    }\n    mapPrecondition(id) {\n        const writer = new Writer();\n        writer.if(\"input && isCollection(input)\").return(Writer.mapperFrom(\"input\", `{...options, id: '${id}'}`));\n        writer.if(\"hasJsonMethod(input)\").return(`mapJSON(input, {...options, id: '${id}'})`);\n        return writer;\n    }\n    mapDiscriminatorKeyValue(entity) {\n        if (entity.discriminatorAncestor) {\n            const discriminator = entity.discriminatorAncestor.schema.discriminator();\n            const type = discriminator.getDefaultValue(entity.target);\n            if (type) {\n                const writer = new Writer();\n                writer.if(`!obj.${discriminator.propertyName}`).set(`obj.${discriminator.propertyName}`, `'${type}'`);\n                return writer;\n            }\n        }\n    }\n    mapAdditionalProperties(entity, properties) {\n        const additionalProperties = !!entity.schema.get(\"additionalProperties\");\n        if (additionalProperties) {\n            const exclude = [...properties.values()].map((key) => `'${key}'`).join(\", \");\n            const writer = new Writer();\n            writer.add(\"// add additional properties\");\n            writer.each(\"objectKeys(input)\", [\"key\"]).if(`![${exclude}].includes(key)`).set(\"obj[key]\", \"input[key]\");\n            return writer;\n        }\n    }\n    mapObject(input, { type, ...options }) {\n        if ((input && isPrimitive(input)) || !input) {\n            // prevent mongoose mapping error\n            return input;\n        }\n        if (input && isCollection(input)) {\n            return this.execMapper(getCollectionType(input), input, options);\n        }\n        if (hasJsonMethod(input)) {\n            return this.mapJSON(input, options);\n        }\n        return getObjectProperties(input)\n            .filter(([, value]) => value !== undefined)\n            .reduce((obj, [key, value]) => {\n            if (isNil(value)) {\n                return {\n                    ...obj,\n                    [key]: value\n                };\n            }\n            const mapper = this.compile(classOf(value), options.groups);\n            return {\n                ...obj,\n                [key]: mapper.fn(value, options)\n            };\n        }, {});\n    }\n    mapSet(input, options) {\n        if (isNil(input)) {\n            return input;\n        }\n        return [...input.values()].map((item) => {\n            return this.mapItem(item, options);\n        });\n    }\n    mapArray(input, options) {\n        if (isNil(input)) {\n            return input;\n        }\n        return [].concat(input).map((item) => {\n            return this.mapItem(item, options);\n        });\n    }\n    mapMap(input, options) {\n        if (isNil(input)) {\n            return input;\n        }\n        return [...input.entries()].reduce((obj, [key, item]) => {\n            return {\n                ...obj,\n                [key]: this.mapItem(item, options)\n            };\n        }, {});\n    }\n    mapItem(input, { id, ...options }) {\n        if (!id && input) {\n            return this.compile(classOf(input), options.groups).fn(input, options);\n        }\n        return id ? this.execMapper(id, input, options) : input;\n    }\n    mapJSON(input, { id, ...options }) {\n        if (isMongooseObject(input)) {\n            return input.toJSON({ ...options, id });\n        }\n        id = id || nameOf(classOf(input));\n        if (this.mappers[id] && (isDate(input) || isMomentObject(input))) {\n            return this.execMapper(id, input, options);\n        }\n        input = input.toJSON();\n        return isObject(input) ? this.execMapper(id, input, options) : input;\n    }\n}\n","import \"../components/DateMapper\";\nimport \"../components/PrimitiveMapper\";\nimport \"../components/SymbolMapper\";\nimport { JsonDeserializer } from \"../domain/JsonDeserializer.js\";\nconst deserializer = new JsonDeserializer();\nexport function deserialize(input, options) {\n    return deserializer.map(input, options);\n}\n","import \"../components/DateMapper\";\nimport \"../components/PrimitiveMapper\";\nimport \"../components/SymbolMapper\";\nimport { JsonSerializer } from \"../domain/JsonSerializer.js\";\nconst serializer = new JsonSerializer();\nexport function serialize(input, options) {\n    return serializer.map(input, options);\n}\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__803__","__WEBPACK_EXTERNAL_MODULE__953__","JsonMapperCompiler","constructor","this","cache","Map","mappers","schemes","constructors","globals","isCollection","isClass","isObject","classOf","nameOf","hasJsonMethod","isMongooseObject","isNil","isDate","objectKeys","isMomentObject","addGlobal","alterIgnore","bind","alterValue","execMapper","map","addTypeMapper","model","fn","id","set","removeTypeMapper","store","get","delete","key","value","eval","mapper","injectGlobals","Object","keys","name","join","groupsId","createContext","options","compile","groups","opts","token","isString","getType","getGroupsId","storeGroups","has","getId","createMapper","err","Error","message","isObjectID","toString","type","Array","Set","find","t","ancestorsOf","includes","result","$hooks","alter","alterGroups","schema","length","getRandomId","getSchemaId","propertyKey","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","i","create","SuppressedError","JsonMapperTypesContainer","registerJsonTypeMapper","getJsonMapperTypes","JsonMapper","types","forEach","DateMapper","deserialize","data","isBoolean","Date","serialize","object","toISOString","isNullish","CastError","super","PrimitiveMapper","ctx","String","Boolean","Number","isNaN","BigInt","SymbolMapper","for","replace","AfterDeserialize","cb","JsonEntityFn","storedJson","on","BeforeDeserialize","OnDeserialize","OnSerialize","alterAfterDeserialize","alterBeforeDeserialize","alterOnDeserialize","JsonMapperSettings","disableUnsecureConstructor","additionalProperties","strictGroups","Writer","assign","args","filter","body","_root","static","lines","p","mapperId","add","line","push","arrow","writer","new","build","flatMap","_indent","item","callMapper","returnCallMapper","return","const","each","iterable","if","condition","IfWriter","switch","input","sw","SwitchWriter","indent","left","right","else","elseWriter","flat","case","from","entries","varKey","k","JsonDeserializer","newInstanceOf","mapObject","mapArray","mapMap","mapSet","collectionType","isEmpty","isDeserializable","mapOptions","isArray","WeakMap","WeakSet","er","entity","JsonEntityStore","properties","schemaProperties","getPropertiesStores","values","hasDiscriminator","mapDiscriminator","genericLabels","propertyStore","propertyName","parent","getAliasOf","$ignore","isGetterOnly","mapProperty","mapAdditionalProperties","schemaId","discriminator","kind","nestedMapper","aliasKey","format","itemSchema","formatOpts","pick","hasDeserializer","ifWriter","getPropertyFiller","fill","generics","nestedGenerics","isGeneric","index","indexOf","genericType","getGenericIndex","base","getBestType","useAlias","JsonParameterStore","parameter","mapParamStoreOptions","typeName","customMappers","exclude","getComputedType","mapItem","concat","alterOnSerialize","getObjectProperties","isFunction","JsonSerializer","mapJSON","dataType","isClassObject","mapPrecondition","mapDiscriminatorKeyValue","hasSerializer","targetName","createDiscriminatorMapper","mapperFrom","discriminatorAncestor","getDefaultValue","isPrimitive","getCollectionType","reduce","toJSON","deserializer","serializer"],"sourceRoot":""}