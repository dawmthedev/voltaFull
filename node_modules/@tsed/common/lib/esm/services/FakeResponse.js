import { EventEmitter } from "node:events";
export class FakeResponse extends EventEmitter {
    constructor(opts = {}) {
        super();
        this.headers = {};
        this.locals = {};
        this.statusCode = 200;
        Object.assign(this, opts);
    }
    status(code) {
        this.statusCode = code;
        return this;
    }
    contentType(content) {
        this.set("content-type", content);
    }
    contentLength(content) {
        this.set("content-length", content);
    }
    redirect(status, path) {
        this.statusCode = status;
        this.set("location", path);
    }
    location(path) {
        this.set("location", path);
    }
    get(key) {
        return this.headers[key.toLowerCase()];
    }
    getHeaders() {
        return this.headers;
    }
    set(key, value) {
        this.headers[key.toLowerCase()] = value;
        return this;
    }
    setHeader(key, value) {
        this.headers[key.toLowerCase()] = value;
        return this;
    }
    send(data) {
        this.data = data;
    }
    json(data) {
        this.data = data;
    }
    write(chunk) {
        this.emit("data", chunk);
    }
    end(data) {
        data !== undefined && (this.data = data);
        this.emit("end");
    }
}
//# sourceMappingURL=FakeResponse.js.map