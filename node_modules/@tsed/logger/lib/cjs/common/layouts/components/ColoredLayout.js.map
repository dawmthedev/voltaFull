{"version":3,"file":"ColoredLayout.js","sourceRoot":"","sources":["../../../../../src/common/layouts/components/ColoredLayout.ts"],"names":[],"mappings":";;;;AACA,kFAA6E;AAC7E,sDAAkD;AAClD,iDAA4C;AAC5C,oDAA+C;AAC/C,sDAAiD;AAG1C,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,uBAAU;IAC3C;;;OAGG;IACH,SAAS,CAAC,YAAsB,EAAE,cAAuB;QACvD,MAAM,KAAK,GAAQ,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjD,MAAM,KAAK,GAAG,sBAAU,CAAC,KAAgC,CAAC,CAAC;QAC3D,OAAO,CACL,IAAA,qDAAyB,EAAC,YAAY,EAAE,KAAK,EAAE,cAAc,CAAC,GAAI,yBAAW,CAAC,MAAc,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,IAAW,CAAC,CAAC,CACrI,CAAC;IACJ,CAAC;CACF,CAAA;AAZY,sCAAa;wBAAb,aAAa;IADzB,IAAA,eAAM,EAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC;GACb,aAAa,CAYzB","sourcesContent":["import {LogEvent} from \"../../core/LogEvent\";\nimport {timestampLevelAndCategory} from \"../utils/timestampLevelAndCategory\";\nimport {LOG_COLORS} from \"../constants/logColors\";\nimport {Layout} from \"../decorators/layout\";\nimport {BaseLayout} from \"../class/BaseLayout\";\nimport {StringUtils} from \"../utils/StringUtils\";\n\n@Layout({name: \"colored\"})\nexport class ColoredLayout extends BaseLayout {\n  /**\n   * colouredLayout - taken from masylum's fork.\n   * same as basicLayout, but with colours.\n   */\n  transform(loggingEvent: LogEvent, timezoneOffset?: number): string {\n    const index: any = loggingEvent.level.toString();\n    const color = LOG_COLORS[index as keyof typeof LOG_COLORS];\n    return (\n      timestampLevelAndCategory(loggingEvent, color, timezoneOffset) + (StringUtils.format as any)(...[].concat(loggingEvent.data as any))\n    );\n  }\n}\n"]}