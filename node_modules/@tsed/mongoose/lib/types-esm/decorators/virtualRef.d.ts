import { MongooseVirtualRefOptions } from "../interfaces/MongooseVirtualRefOptions.js";
/**
 * Define a property as mongoose virtual reference to other Model (decorated with @Model).
 *
 * ::: warning
 * To avoid circular dependencies, do not use the virtual reference model in
 * anything except a type declaration. Using the virtual reference model will prevent
 * typescript transpiler from stripping away the import statement and cause a circular
 * import in node.
 * :::
 *
 * @param ref
 * @param foreignField
 * @returns {Function}
 * @decorator
 * @mongoose
 * @property
 */
export declare function VirtualRef(ref: string, foreignField: string): Function;
export declare function VirtualRef(options: MongooseVirtualRefOptions): Function;
export declare function VirtualRef(options: string | MongooseVirtualRefOptions, foreignField?: string): Function;
export type VirtualRef<T> = T | null;
/**
 * @deprecated Use T[] instead
 */
export type VirtualRefs<T> = T[];
