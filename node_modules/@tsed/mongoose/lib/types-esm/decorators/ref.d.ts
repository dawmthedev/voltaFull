import { Type } from "@tsed/core";
import { MongooseSchemaTypes } from "../interfaces/MongooseSchemaTypes.js";
interface RefOptions {
    type?: MongooseSchemaTypes;
    populatedGroups?: string[];
}
/**
 * Define a property as mongoose reference to other Model (decorated with @Model).
 *
 * ### Example
 *
 * ```typescript
 *
 * @Model()
 * class FooModel {
 *
 *    @Ref(Foo2Model)
 *    field: Ref<Foo2Model>
 *
 *    @Ref(Foo2Model)
 *    list: Ref<Foo2Model>[]
 * }
 *
 * @Model()
 * class Foo2Model {
 * }
 * ```
 *
 * @param model
 * @param options
 * @returns {Function}
 * @decorator
 * @mongoose
 * @property
 */
export declare function Ref(model: string | (() => Type) | any, options?: RefOptions | MongooseSchemaTypes): PropertyDecorator;
export type Ref<T> = T | string;
export {};
