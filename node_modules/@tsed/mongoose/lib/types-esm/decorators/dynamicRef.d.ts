import { Type } from "@tsed/core";
/**
 * Define a property as mongoose reference to other Model (decorated with @Model).
 *
 * ### Example
 *
 * ```typescript
 * @Model()
 * class FooModel {
 *
 *    @DynamicRef('type')
 *    field: DynamicRef<OtherFooModel | OtherModel>
 *
 *    @Enum(['OtherFooModel', 'OtherModel'])
 *    type: string
 * }
 *
 * @Model()
 * class OtherFooModel {
 * }
 *
 * @Model()
 * class OtherModel {
 * }
 * ```
 *
 * @param refPath {String} the path to apply the correct model
 * @param types {Type} the classes to generate the correct json schema
 * @returns {Function}
 * @decorator
 * @mongoose
 * @property
 */
export declare function DynamicRef(refPath: string, ...types: Type<any>[]): PropertyDecorator;
export type DynamicRef<T> = T | string;
