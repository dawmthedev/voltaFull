"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MongooseModule = void 0;
const tslib_1 = require("tslib");
const di_1 = require("@tsed/di");
const di_2 = require("@tsed/di");
const MongooseConnections_js_1 = require("./services/MongooseConnections.js");
const MongooseService_js_1 = require("./services/MongooseService.js");
/**
 * @ignore
 */
let MongooseModule = class MongooseModule {
    constructor(mongooseService, settings) {
        this.mongooseService = mongooseService;
        this.settings = settings;
        // auto configure the cache manager when mongoose is used with @tsed/mongoose
        const cache = this.settings.get("cache");
        // istanbul ignore next
        if (cache?.mongoose) {
            cache.connection = this.mongooseService.get();
        }
    }
    $onInit() { }
    $onDestroy() {
        return this.mongooseService.closeConnections();
    }
};
MongooseModule = tslib_1.__decorate([
    (0, di_2.Module)({
        imports: [MongooseConnections_js_1.MONGOOSE_CONNECTIONS]
    }),
    tslib_1.__param(1, (0, di_1.Configuration)()),
    tslib_1.__metadata("design:paramtypes", [MongooseService_js_1.MongooseService, Object])
], MongooseModule);
exports.MongooseModule = MongooseModule;
//# sourceMappingURL=MongooseModule.js.map