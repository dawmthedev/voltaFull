"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.alterOneOf = void 0;
const core_1 = require("@tsed/core");
const jsonSchemaProperties_js_1 = require("../constants/jsonSchemaProperties.js");
function findManyOf(obj) {
    return jsonSchemaProperties_js_1.MANY_OF_PROPERTIES.find((keyword) => obj[keyword]);
}
const RULES = {
    string: { properties: jsonSchemaProperties_js_1.STRING_PROPERTIES, is: core_1.isString },
    number: { properties: jsonSchemaProperties_js_1.NUMBER_PROPERTIES, is: core_1.isNumber },
    boolean: { properties: jsonSchemaProperties_js_1.BOOLEAN_PROPERTIES, is: core_1.isBoolean },
    array: { properties: jsonSchemaProperties_js_1.ARRAY_PROPERTIES, is: () => false },
    object: { properties: jsonSchemaProperties_js_1.OBJECT_PROPERTIES, is: () => false }
};
function pickProperties(type, obj, item) {
    const rule = RULES[type];
    rule?.properties.concat(jsonSchemaProperties_js_1.COMMON_PROPERTIES).forEach((keyword) => {
        if (obj[keyword] !== undefined) {
            if (jsonSchemaProperties_js_1.COMMON_PROPERTIES.includes(keyword)) {
                item[keyword] = obj[keyword].filter(rule.is);
            }
            else {
                item[keyword] = obj[keyword];
                delete obj[keyword];
            }
        }
    });
}
function alterOneOf(obj, schema, options) {
    const kind = findManyOf(obj);
    if (kind) {
        obj[kind].forEach((item) => {
            pickProperties(item.type, obj, item);
        });
        jsonSchemaProperties_js_1.MANY_OF_PROPERTIES.forEach((keyword) => {
            if (obj[keyword] && options.groups !== false && schema.$hooks.has(keyword)) {
                obj = { ...obj, [keyword]: schema.$hooks.alter(keyword, obj[keyword], [options.groups]) };
            }
        });
        delete obj.const;
        delete obj.enum;
        if (!(obj.items || obj.properties)) {
            delete obj.type;
        }
    }
    return obj;
}
exports.alterOneOf = alterOneOf;
//# sourceMappingURL=alterOneOf.js.map