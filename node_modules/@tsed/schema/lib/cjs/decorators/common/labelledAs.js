"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LabelledAs = void 0;
const jsonEntityFn_js_1 = require("./jsonEntityFn.js");
/**
 * Use label to create ref on the current decorated property.
 *
 * ### Example
 *
 * ```ts
 * class Model {
 *   // For single property
 *   ＠LabelledAs("UserSchema")
 *   name: string;
 *
 *   // For collection
 *   ＠LabelledAs("UserCollectionSchema", "collection")
 *   users: User[];
 * }
 * ```
 *
 * @param label The name of the label
 * @param includeCollection Add the label to the collection. By default, the label is added to the item of the collection it the property is a collection.
 * @returns PropertyDecorator
 *
 * @decorator
 */
function LabelledAs(label, includeCollection = false) {
    return (0, jsonEntityFn_js_1.JsonEntityFn)((entity) => {
        if (includeCollection) {
            entity.schema.label(label);
        }
        else {
            entity.itemSchema.label(label);
        }
    });
}
exports.LabelledAs = LabelledAs;
//# sourceMappingURL=labelledAs.js.map