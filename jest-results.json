{"numFailedTestSuites":18,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":18,"numTodoTests":0,"numTotalTestSuites":18,"numTotalTests":0,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1748132088768,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/dawmthedev/Desktop/VoltaFull/voltaFull/server/src/util/__tests__/logger.test.ts:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import logger, { emoji } from '../logger';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/server/src/util/__tests__/logger.test.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/components/add-lead/AddLead.test.tsx: Support for the experimental syntax 'jsx' isn't currently enabled (10:7):\n\n    \u001b[0m \u001b[90m  8 |\u001b[39m     \u001b[36mconst\u001b[39m getAddLeadData \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m;\u001b[39m\n     \u001b[90m  9 |\u001b[39m     render(\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33mAddLead\u001b[39m leadValue\u001b[33m=\u001b[39m{sampleLeadValue} getAddLeadData\u001b[33m=\u001b[39m{getAddLeadData} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m    |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 11 |\u001b[39m     )\u001b[33m;\u001b[39m\n     \u001b[90m 12 |\u001b[39m     \u001b[36mconst\u001b[39m input \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByLabelText(\u001b[32m\"First Name\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 13 |\u001b[39m     fireEvent\u001b[33m.\u001b[39mchange(input\u001b[33m,\u001b[39m { target\u001b[33m:\u001b[39m { value\u001b[33m:\u001b[39m \u001b[32m\"John\"\u001b[39m } })\u001b[33m;\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n    If you already added the plugin for this syntax to your config, it's possible that your config isn't being loaded.\n    You can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n    \tnpx cross-env BABEL_SHOW_CONFIG_FOR=/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/components/add-lead/AddLead.test.tsx <your build command>\n    See https://babeljs.io/docs/configuration#print-effective-configs for more info.\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as expectOnePlugin] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1568:18)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1248:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/components/add-lead/AddLead.test.tsx","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/redux/middleware/role.test.ts: Missing semicolon. (18:29)\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m describe(\u001b[32m'role middleware'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 17 |\u001b[39m   \u001b[36mconst\u001b[39m dispatch \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m   \u001b[36mconst\u001b[39m getState \u001b[33m=\u001b[39m () \u001b[33m=>\u001b[39m ({}) \u001b[36mas\u001b[39m any\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m\n     \u001b[90m 20 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 21 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:150:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1223:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:578:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/redux/middleware/role.test.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/util/createSessionToken.test.ts: Missing semicolon. (15:37)\n\n    \u001b[0m \u001b[90m 13 |\u001b[39m     \u001b[36mconst\u001b[39m { createSessionToken } \u001b[33m=\u001b[39m require(\u001b[32m'../../../server/src/util'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 14 |\u001b[39m     \u001b[36mconst\u001b[39m token \u001b[33m=\u001b[39m createSessionToken({ id\u001b[33m:\u001b[39m \u001b[32m'123'\u001b[39m\u001b[33m,\u001b[39m email\u001b[33m:\u001b[39m \u001b[32m'a@test.com'\u001b[39m\u001b[33m,\u001b[39m role\u001b[33m:\u001b[39m \u001b[32m'admin'\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 |\u001b[39m     \u001b[36mconst\u001b[39m decoded \u001b[33m=\u001b[39m jwt\u001b[33m.\u001b[39mdecode(token) \u001b[36mas\u001b[39m any\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 16 |\u001b[39m     expect(decoded)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39mobjectContaining({ id\u001b[33m:\u001b[39m \u001b[32m'123'\u001b[39m\u001b[33m,\u001b[39m email\u001b[33m:\u001b[39m \u001b[32m'a@test.com'\u001b[39m\u001b[33m,\u001b[39m role\u001b[33m:\u001b[39m \u001b[32m'admin'\u001b[39m }))\u001b[33m;\u001b[39m\n     \u001b[90m 17 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 18 |\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:150:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1223:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:578:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/util/createSessionToken.test.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/server/src/util/__tests__/emojiAppender.test.ts: Unexpected token, expected \",\" (6:82)\n\n    \u001b[0m \u001b[90m 4 |\u001b[39m describe(\u001b[32m\"EmojiAppender\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 5 |\u001b[39m   it(\u001b[32m\"summarizes object info logs\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m     \u001b[36mconst\u001b[39m spy \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mspyOn(process\u001b[33m.\u001b[39mstdout\u001b[33m,\u001b[39m \u001b[32m\"write\"\u001b[39m)\u001b[33m.\u001b[39mmockImplementation(() \u001b[33m=>\u001b[39m \u001b[36mtrue\u001b[39m \u001b[36mas\u001b[39m any)\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m                                                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 7 |\u001b[39m     $log\u001b[33m.\u001b[39minfo({ b\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m a\u001b[33m:\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m d\u001b[33m:\u001b[39m \u001b[35m3\u001b[39m\u001b[33m,\u001b[39m c\u001b[33m:\u001b[39m \u001b[35m4\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 8 |\u001b[39m     expect(spy)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m`➡️ {\\\"a\\\":2,\\\"b\\\":1,\\\"c\\\":4}\\n`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 9 |\u001b[39m     spy\u001b[33m.\u001b[39mmockRestore()\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as unexpected] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.unexpected [as expect] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:158:12)\u001b[22m\n      \u001b[2mat Parser.expect [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1014:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseVar] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1558:18)\u001b[22m\n      \u001b[2mat Parser.parseVar [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1222:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:578:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/server/src/util/__tests__/emojiAppender.test.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/pages/accounts-payable/AccountsPayable.test.tsx: Support for the experimental syntax 'jsx' isn't currently enabled (7:12):\n\n    \u001b[0m \u001b[90m  5 |\u001b[39m describe(\u001b[32m\"AccountsPayable page\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m  6 |\u001b[39m   it(\u001b[32m\"renders heading and placeholder row\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m     render(\u001b[33m<\u001b[39m\u001b[33mAccountsPayable\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m  8 |\u001b[39m     expect(\n     \u001b[90m  9 |\u001b[39m       screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m\"heading\"\u001b[39m\u001b[33m,\u001b[39m { name\u001b[33m:\u001b[39m \u001b[35m/accounts payable/i\u001b[39m })\n     \u001b[90m 10 |\u001b[39m     )\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n    If you already added the plugin for this syntax to your config, it's possible that your config isn't being loaded.\n    You can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n    \tnpx cross-env BABEL_SHOW_CONFIG_FOR=/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/pages/accounts-payable/AccountsPayable.test.tsx <your build command>\n    See https://babeljs.io/docs/configuration#print-effective-configs for more info.\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as expectOnePlugin] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1568:18)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1248:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/pages/accounts-payable/AccountsPayable.test.tsx","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/services/RoleService.test.ts: Missing semicolon. (4:15)\n\n    \u001b[0m \u001b[90m 2 |\u001b[39m\n     \u001b[90m 3 |\u001b[39m describe(\u001b[32m'RoleService'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 4 |\u001b[39m   \u001b[36mlet\u001b[39m roleModel\u001b[33m:\u001b[39m any\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 5 |\u001b[39m   \u001b[36mlet\u001b[39m service\u001b[33m:\u001b[39m \u001b[33mRoleService\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 6 |\u001b[39m\n     \u001b[90m 7 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:150:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1223:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:578:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/services/RoleService.test.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/services/AdminService.test.ts: Missing semicolon. (13:16)\n\n    \u001b[0m \u001b[90m 11 |\u001b[39m\n     \u001b[90m 12 |\u001b[39m describe(\u001b[32m'AdminService'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m   \u001b[36mlet\u001b[39m adminModel\u001b[33m:\u001b[39m any\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 14 |\u001b[39m   \u001b[36mlet\u001b[39m verifyModel\u001b[33m:\u001b[39m any\u001b[33m;\u001b[39m\n     \u001b[90m 15 |\u001b[39m   \u001b[36mlet\u001b[39m orgModel\u001b[33m:\u001b[39m any\u001b[33m;\u001b[39m\n     \u001b[90m 16 |\u001b[39m   \u001b[36mlet\u001b[39m service\u001b[33m:\u001b[39m \u001b[33mAdminService\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:150:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1223:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:578:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/services/AdminService.test.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/components/dataGrid/DealsData.test.tsx: Unexpected token, expected \",\" (13:33)\n\n    \u001b[0m \u001b[90m 11 |\u001b[39m   it(\u001b[32m'navigates to lead detail on click'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 12 |\u001b[39m     \u001b[36mconst\u001b[39m navigate \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m     (require(\u001b[32m'react-router-dom'\u001b[39m) \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39museNavigate\u001b[33m.\u001b[39mmockReturnValue(navigate)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 14 |\u001b[39m     render(\n     \u001b[90m 15 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33mMemoryRouter\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 16 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mDealsData\u001b[39m recordUserId\u001b[33m=\u001b[39m{\u001b[35m1\u001b[39m} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as unexpected] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.unexpected [as expect] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:158:12)\u001b[22m\n      \u001b[2mat Parser.expect [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1760:14)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseAsyncArrowFromCallExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1045:10)\u001b[22m\n      \u001b[2mat Parser.parseAsyncArrowFromCallExpression [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:924:27)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/components/dataGrid/DealsData.test.tsx","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/libs/client/apiClient.test.ts: Unexpected token, expected \",\" (11:18)\n\n    \u001b[0m \u001b[90m  9 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 10 |\u001b[39m     jest\u001b[33m.\u001b[39mresetModules()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m     (axios\u001b[33m.\u001b[39mcreate \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMock\u001b[39m)\u001b[33m.\u001b[39mmockClear()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 12 |\u001b[39m     \u001b[36mdelete\u001b[39m (global \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mlocalStorage\u001b[33m;\u001b[39m\n     \u001b[90m 13 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 14 |\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as unexpected] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.unexpected [as expect] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:158:12)\u001b[22m\n      \u001b[2mat Parser.expect [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1760:14)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/libs/client/apiClient.test.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/services/VerificationService.test.ts: Missing semicolon. (11:23)\n\n    \u001b[0m \u001b[90m  9 |\u001b[39m\n     \u001b[90m 10 |\u001b[39m describe(\u001b[32m'VerificationService'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m   \u001b[36mlet\u001b[39m verificationModel\u001b[33m:\u001b[39m any\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 12 |\u001b[39m   \u001b[36mlet\u001b[39m service\u001b[33m:\u001b[39m \u001b[33mVerificationService\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 13 |\u001b[39m\n     \u001b[90m 14 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:150:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1223:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:578:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/services/VerificationService.test.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/helper/OpenAIService.test.ts: Missing semicolon. (31:34)\n\n    \u001b[0m \u001b[90m 29 |\u001b[39m\n     \u001b[90m 30 |\u001b[39m describe(\u001b[32m'OpenAIService'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 31 |\u001b[39m   \u001b[36mconst\u001b[39m axiosPostMock \u001b[33m=\u001b[39m axios\u001b[33m.\u001b[39mpost \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMock\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 32 |\u001b[39m\n     \u001b[90m 33 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 34 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:150:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1223:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:578:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/helper/OpenAIService.test.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/integration/auth.integration.test.ts: Missing semicolon. (9:13)\n\n    \u001b[0m \u001b[90m  7 |\u001b[39m\n     \u001b[90m  8 |\u001b[39m describe(\u001b[32m\"Authentication integration\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m   \u001b[36mlet\u001b[39m request\u001b[33m:\u001b[39m \u001b[33mSuperTest\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSuperTest\u001b[39m\u001b[33m<\u001b[39m\u001b[33mSuperTest\u001b[39m\u001b[33m.\u001b[39m\u001b[33mTest\u001b[39m\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 10 |\u001b[39m   \u001b[36mlet\u001b[39m adminService\u001b[33m:\u001b[39m \u001b[33mAdminService\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 11 |\u001b[39m   \u001b[36mlet\u001b[39m verificationService\u001b[33m:\u001b[39m \u001b[33mVerificationService\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 12 |\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:150:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1223:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:578:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/integration/auth.integration.test.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/controllers/AdminController.test.ts: Missing semicolon. (6:13)\n\n    \u001b[0m \u001b[90m 4 |\u001b[39m\n     \u001b[90m 5 |\u001b[39m describe(\u001b[32m\"AdminController /admin/me\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   \u001b[36mlet\u001b[39m request\u001b[33m:\u001b[39m \u001b[33mSuperTest\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSuperTest\u001b[39m\u001b[33m<\u001b[39m\u001b[33mSuperTest\u001b[39m\u001b[33m.\u001b[39m\u001b[33mTest\u001b[39m\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 7 |\u001b[39m\n     \u001b[90m 8 |\u001b[39m   beforeEach(\u001b[33mPlatformTest\u001b[39m\u001b[33m.\u001b[39mbootstrap(\u001b[33mServer\u001b[39m))\u001b[33m;\u001b[39m\n     \u001b[90m 9 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:150:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1223:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:578:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/controllers/AdminController.test.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/server/src/Server.integration.spec.ts: Missing semicolon. (6:13)\n\n    \u001b[0m \u001b[90m 4 |\u001b[39m\n     \u001b[90m 5 |\u001b[39m describe(\u001b[32m\"Server\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   \u001b[36mlet\u001b[39m request\u001b[33m:\u001b[39m \u001b[33mSuperTest\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSuperTest\u001b[39m\u001b[33m<\u001b[39m\u001b[33mSuperTest\u001b[39m\u001b[33m.\u001b[39m\u001b[33mTest\u001b[39m\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 7 |\u001b[39m\n     \u001b[90m 8 |\u001b[39m   beforeEach(\u001b[33mPlatformTest\u001b[39m\u001b[33m.\u001b[39mbootstrap(\u001b[33mServer\u001b[39m))\u001b[33m;\u001b[39m\n     \u001b[90m 9 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:150:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1223:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:578:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/server/src/Server.integration.spec.ts","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/root/RootComponent.test.tsx: Support for the experimental syntax 'jsx' isn't currently enabled (6:12):\n\n    \u001b[0m \u001b[90m 4 |\u001b[39m describe(\u001b[32m'RootComponent'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 5 |\u001b[39m   it(\u001b[32m'renders hello world'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m     render(\u001b[33m<\u001b[39m\u001b[33mRootComponent\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 7 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByText(\u001b[35m/hello world/i\u001b[39m))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n     \u001b[90m 8 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 9 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n    If you already added the plugin for this syntax to your config, it's possible that your config isn't being loaded.\n    You can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n    \tnpx cross-env BABEL_SHOW_CONFIG_FOR=/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/root/RootComponent.test.tsx <your build command>\n    See https://babeljs.io/docs/configuration#print-effective-configs for more info.\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as expectOnePlugin] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1568:18)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1248:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/root/RootComponent.test.tsx","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/helloWorld.test.tsx: Support for the experimental syntax 'jsx' isn't currently enabled (6:12):\n\n    \u001b[0m \u001b[90m 4 |\u001b[39m\n     \u001b[90m 5 |\u001b[39m test(\u001b[32m'renders HelloWorld component'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m     render(\u001b[33m<\u001b[39m\u001b[33mHelloWorld\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 7 |\u001b[39m     \u001b[36mconst\u001b[39m linkElement \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByText(\u001b[35m/hello world/i\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 8 |\u001b[39m     expect(linkElement)\u001b[33m.\u001b[39mtoBeInTheDocument()\u001b[33m;\u001b[39m\n     \u001b[90m 9 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n    If you already added the plugin for this syntax to your config, it's possible that your config isn't being loaded.\n    You can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n    \tnpx cross-env BABEL_SHOW_CONFIG_FOR=/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/helloWorld.test.tsx <your build command>\n    See https://babeljs.io/docs/configuration#print-effective-configs for more info.\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as expectOnePlugin] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1568:18)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1248:16)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:398:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1415:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1356:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2579:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2520:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1807:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1146:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:723:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:252:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3136:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:251:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2742:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1025:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:903:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:785:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:744:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:729:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:702:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:664:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:398:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:410:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:365:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:296:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:221:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3131:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:212:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:654:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:449:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:386:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1414:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1388:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:225:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/client/helloWorld.test.tsx","startTime":1748132089579,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1748132089579,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Cannot find module '../../server' from 'tests/server/helloWorld.test.ts'\n\n    \u001b[0m \u001b[90m 1 |\u001b[39m \u001b[36mconst\u001b[39m request \u001b[33m=\u001b[39m require(\u001b[32m'supertest'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 2 |\u001b[39m \u001b[36mconst\u001b[39m app \u001b[33m=\u001b[39m require(\u001b[32m'../../server'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Adjust the path to your server file\u001b[39m\n     \u001b[90m   |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 3 |\u001b[39m\n     \u001b[90m 4 |\u001b[39m describe(\u001b[32m'GET /hello'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 5 |\u001b[39m     it(\u001b[32m'should respond with a message'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat Resolver._throwModNotFoundError (\u001b[22mnode_modules/jest-resolve/build/resolver.js\u001b[2m:427:11)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22m\u001b[0m\u001b[36mtests/server/helloWorld.test.ts\u001b[39m\u001b[0m\u001b[2m:2:13)\u001b[22m\n","name":"/Users/dawmthedev/Desktop/VoltaFull/voltaFull/tests/server/helloWorld.test.ts","startTime":1748132089579,"status":"failed","summary":""}],"wasInterrupted":false}
